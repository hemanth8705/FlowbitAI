2025-06-04 23:16:12,090 - __main__ - INFO - Application starting up...
2025-06-04 23:16:12,091 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\pdfs\invoice.pdf
2025-06-04 23:16:12,091 - processor.fileProcessor - INFO - Processing PDF file.
2025-06-04 23:16:12,092 - processor.fileProcessor - INFO - Starting extraction from PDF: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\pdfs\invoice.pdf
2025-06-04 23:16:12,095 - processor.fileProcessor - DEBUG - PDF opened successfully with 1 pages.
2025-06-04 23:16:12,096 - processor.fileProcessor - DEBUG - Processing page 1.
2025-06-04 23:16:12,132 - processor.fileProcessor - DEBUG - Found 0 table(s) on page 1.
2025-06-04 23:16:12,134 - processor.fileProcessor - INFO - Completed extraction from PDF successfully.
2025-06-04 23:16:12,145 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-04 23:16:12,145 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-04 23:16:12,146 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-04 23:16:12,146 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-04 23:16:12,147 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-04 23:16:12,147 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-04 23:16:12,148 - processor.fileProcessor - INFO - PDF file processed successfully.
2025-06-04 23:16:12,152 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-04 23:16:13,420 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-04 23:16:13,421 - agents.ClassifierAgent - DEBUG - LLM output after stripping: { "format": "pdf", "intent": "invoice" }
2025-06-04 23:16:13,422 - agents.ClassifierAgent - DEBUG - Extracting JSON from LLM output.
2025-06-04 23:16:13,423 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'pdf', 'intent': 'invoice'}
2025-06-04 23:16:13,423 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'pdf', 'intent': 'invoice'}
2025-06-04 23:16:13,426 - agents.PdfAgent - INFO - Processing PDF text through PDF agent chain.
2025-06-04 23:16:13,427 - agents.PdfAgent - DEBUG - PDF text received for processing: - Item 1:
  Page_number: 1
  Text: Invoice
Invoice Number 123
Issue Date March 25, 2024
Due Date Mar...
2025-06-04 23:16:14,402 - agents.PdfAgent - DEBUG - PDF agent chain invoked successfully.
2025-06-04 23:16:14,402 - agents.PdfAgent - DEBUG - LLM output after stripping: ```json
{
  "document_type": "invoice",
  "extracted_data": {
    "Invoice Number/ID": "123",
    "I...
2025-06-04 23:16:14,403 - agents.PdfAgent - DEBUG - Extracting JSON from Pdf agent output.
2025-06-04 23:16:14,403 - agents.PdfAgent - DEBUG - Successfully parsed JSON: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': '123', 'Issue Date': 'March 25, 2024', 'Due Date': 'March 25, 2024', 'Customer Name': 'Example, LLC', 'Line items': [{'description': 'Subscription', 'quantity': 1, 'unit price': 19.0, 'tax': 0, 'amount': 19.0}], 'Currency': 'USD', 'Total Amount': 19.0}, 'anomalies': [], 'suggested_action': 'log_only'}
2025-06-04 23:16:14,404 - agents.PdfAgent - INFO - PDF processing successful, extracted data: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': '123', 'Issue Date': 'March 25, 2024', 'Due Date': 'March 25, 2024', 'Customer Name': 'Example, LLC', 'Line items': [{'description': 'Subscription', 'quantity': 1, 'unit price': 19.0, 'tax': 0, 'amount': 19.0}], 'Currency': 'USD', 'Total Amount': 19.0}, 'anomalies': [], 'suggested_action': 'log_only'}
2025-06-04 23:16:14,407 - __main__ - INFO - Application finished!
2025-06-04 23:17:13,809 - __main__ - INFO - Application starting up...
2025-06-04 23:17:13,811 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\pdfs\invoice.pdf
2025-06-04 23:17:13,812 - processor.fileProcessor - INFO - Processing PDF file.
2025-06-04 23:17:13,814 - processor.fileProcessor - INFO - Starting extraction from PDF: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\pdfs\invoice.pdf
2025-06-04 23:17:13,824 - processor.fileProcessor - DEBUG - PDF opened successfully with 1 pages.
2025-06-04 23:17:13,825 - processor.fileProcessor - DEBUG - Processing page 1.
2025-06-04 23:17:13,861 - processor.fileProcessor - DEBUG - Found 0 table(s) on page 1.
2025-06-04 23:17:13,862 - processor.fileProcessor - INFO - Completed extraction from PDF successfully.
2025-06-04 23:17:13,864 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-04 23:17:13,865 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-04 23:17:13,866 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-04 23:17:13,866 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-04 23:17:13,866 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-04 23:17:13,867 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-04 23:17:13,868 - processor.fileProcessor - INFO - PDF file processed successfully.
2025-06-04 23:17:13,873 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-04 23:17:15,165 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-04 23:17:15,166 - agents.ClassifierAgent - DEBUG - LLM output after stripping: { "format": "pdf", "intent": "invoice" }
2025-06-04 23:17:15,167 - agents.ClassifierAgent - DEBUG - Extracting JSON from LLM output.
2025-06-04 23:17:15,168 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'pdf', 'intent': 'invoice'}
2025-06-04 23:17:15,168 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'pdf', 'intent': 'invoice'}
2025-06-04 23:17:15,170 - agents.PdfAgent - INFO - Processing PDF text through PDF agent chain.
2025-06-04 23:17:15,171 - agents.PdfAgent - DEBUG - PDF text received for processing: - Item 1:
  Page_number: 1
  Text: Invoice
Invoice Number 123
Issue Date March 25, 2024
Due Date Mar...
2025-06-04 23:17:16,181 - agents.PdfAgent - DEBUG - PDF agent chain invoked successfully.
2025-06-04 23:17:16,182 - agents.PdfAgent - DEBUG - LLM output after stripping: ```json
{
  "document_type": "invoice",
  "extracted_data": {
    "Invoice Number/ID": "123",
    "I...
2025-06-04 23:17:16,183 - agents.PdfAgent - DEBUG - Extracting JSON from Pdf agent output.
2025-06-04 23:17:16,185 - agents.PdfAgent - DEBUG - Successfully parsed JSON: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': '123', 'Issue Date': 'March 25, 2024', 'Due Date': 'March 25, 2024', 'Customer Name': 'Example, LLC', 'Line items': [{'description': 'Subscription', 'quantity': 1, 'unit price': '$19.00', 'tax': '0%', 'amount': '$19.00'}], 'Currency': '$', 'Total Amount': '$19.00'}, 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-04 23:17:16,186 - agents.PdfAgent - INFO - PDF processing successful, extracted data: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': '123', 'Issue Date': 'March 25, 2024', 'Due Date': 'March 25, 2024', 'Customer Name': 'Example, LLC', 'Line items': [{'description': 'Subscription', 'quantity': 1, 'unit price': '$19.00', 'tax': '0%', 'amount': '$19.00'}], 'Currency': '$', 'Total Amount': '$19.00'}, 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-04 23:17:16,189 - __main__ - INFO - Application finished!
2025-06-04 23:23:18,495 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-04 23:23:18,495 - __main__ - INFO - Application starting up...
2025-06-04 23:23:18,496 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\json\sample1.json
2025-06-04 23:23:18,535 - processor.fileProcessor - INFO - JSON file processed successfully.
2025-06-04 23:23:18,537 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-04 23:23:19,754 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-04 23:23:19,755 - agents.ClassifierAgent - DEBUG - LLM output after stripping: ```json
{ "format": "json", "intent": "invoice" }
```
2025-06-04 23:23:19,756 - agents.ClassifierAgent - DEBUG - Extracting JSON from LLM output.
2025-06-04 23:23:19,757 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'json', 'intent': 'invoice'}
2025-06-04 23:23:19,757 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'json', 'intent': 'invoice'}
2025-06-04 23:23:19,759 - agents.JsonAgent - INFO - Processing JSON payload through JsonAgent chain.
2025-06-04 23:24:26,698 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-04 23:24:26,700 - __main__ - INFO - Application starting up...
2025-06-04 23:24:26,701 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\json\sample1.json
2025-06-04 23:24:26,703 - processor.fileProcessor - INFO - JSON file processed successfully.
2025-06-04 23:24:26,707 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-04 23:24:27,944 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-04 23:24:27,945 - agents.ClassifierAgent - DEBUG - LLM output after stripping: ```json
{ "format": "json", "intent": "invoice" }
```
2025-06-04 23:24:27,945 - agents.ClassifierAgent - DEBUG - Extracting JSON from LLM output.
2025-06-04 23:24:27,946 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'json', 'intent': 'invoice'}
2025-06-04 23:24:27,946 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'json', 'intent': 'invoice'}
2025-06-04 23:24:27,948 - agents.JsonAgent - INFO - Processing JSON payload through JsonAgent chain.
2025-06-04 23:24:27,948 - agents.JsonAgent - DEBUG - Payload text: {'header': {'tax_scheme': 'GST', 'version': '1.0', 'invoice_reference_no': 'IRN1234567890'}, 'transa...
2025-06-04 23:24:28,620 - agents.JsonAgent - DEBUG - JsonAgent chain invoked successfully.
2025-06-04 23:24:28,622 - agents.JsonAgent - DEBUG - LLM output after stripping: ```json
{
  "status": "valid",
  "anomalies": [
    {
      "field": "note",
      "description": "Extra field not in schema.",
      "severity": "minor"
    }
  ],
  "suggested_action": "log_only"
}
...
2025-06-04 23:24:28,623 - agents.JsonAgent - DEBUG - Extracting JSON from JSON agent output.
2025-06-04 23:24:28,624 - agents.JsonAgent - DEBUG - Successfully parsed JSON: {'status': 'valid', 'anomalies': [{'field': 'note', 'description': 'Extra field not in schema.', 'severity': 'minor'}], 'suggested_action': 'log_only'}
2025-06-04 23:24:28,625 - agents.JsonAgent - INFO - JSON validation successful: {'status': 'valid', 'anomalies': [{'field': 'note', 'description': 'Extra field not in schema.', 'severity': 'minor'}], 'suggested_action': 'log_only'}
2025-06-04 23:24:28,631 - __main__ - INFO - Application finished!
2025-06-04 23:26:02,389 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-04 23:26:02,391 - __main__ - INFO - Application starting up...
2025-06-04 23:26:02,392 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\json\sample1.json
2025-06-04 23:26:02,394 - processor.fileProcessor - INFO - JSON file processed successfully.
2025-06-04 23:26:02,397 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-04 23:26:03,631 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-04 23:26:03,631 - agents.ClassifierAgent - DEBUG - LLM output after stripping: ```json
{ "format": "json", "intent": "invoice" }
``` 


Let me know if you have any more examples to classify!
2025-06-04 23:26:03,632 - agents.ClassifierAgent - DEBUG - Extracting JSON from LLM output.
2025-06-04 23:26:03,632 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'json', 'intent': 'invoice'}
2025-06-04 23:26:03,633 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'json', 'intent': 'invoice'}
2025-06-04 23:26:03,635 - agents.JsonAgent - INFO - Processing JSON payload through JsonAgent chain.
2025-06-04 23:26:03,636 - agents.JsonAgent - DEBUG - Payload text: {'header': {'tax_scheme': 'GST', 'version': '1.0', 'invoice_reference_no': 'IRN1234567890'}, 'transa...
2025-06-04 23:26:04,426 - agents.JsonAgent - DEBUG - JsonAgent chain invoked successfully.
2025-06-04 23:26:04,427 - agents.JsonAgent - DEBUG - LLM output after stripping: ```json
{
  "status": "valid",
  "anomalies": [
    {
      "field": "payment.due_date",
      "description": "Date format is valid but may require further business logic check (e.g., is it a realisti...
2025-06-04 23:26:04,428 - agents.JsonAgent - DEBUG - Extracting JSON from JSON agent output.
2025-06-04 23:26:04,429 - agents.JsonAgent - DEBUG - Successfully parsed JSON: {'status': 'valid', 'anomalies': [{'field': 'payment.due_date', 'description': 'Date format is valid but may require further business logic check (e.g., is it a realistic due date)', 'severity': 'minor'}], 'suggested_action': 'log_and_close'}
2025-06-04 23:26:04,430 - agents.JsonAgent - INFO - JSON validation successful: {'status': 'valid', 'anomalies': [{'field': 'payment.due_date', 'description': 'Date format is valid but may require further business logic check (e.g., is it a realistic due date)', 'severity': 'minor'}], 'suggested_action': 'log_and_close'}
2025-06-04 23:26:04,434 - __main__ - INFO - Application finished!
2025-06-04 23:28:45,664 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-04 23:28:45,664 - __main__ - INFO - Application starting up...
2025-06-04 23:28:45,665 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\txt\sample4.txt
2025-06-04 23:28:45,667 - processor.fileProcessor - INFO - Text file processed successfully.
2025-06-04 23:28:45,670 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-04 23:28:46,900 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-04 23:28:46,901 - agents.ClassifierAgent - DEBUG - LLM output after stripping: ```json
{ "format": "email", "intent": "invoice_dispute" }
```
2025-06-04 23:28:46,901 - agents.ClassifierAgent - DEBUG - Extracting JSON from LLM output.
2025-06-04 23:28:46,901 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'email', 'intent': 'invoice_dispute'}
2025-06-04 23:28:46,901 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'email', 'intent': 'invoice_dispute'}
2025-06-04 23:28:46,902 - agents.EmailAgent - INFO - Processing email text through EmailAgent chain.
2025-06-04 23:28:46,902 - agents.EmailAgent - DEBUG - Email text: Subject: Invoice Discrepancy on INV-12345

Dear Accounts Team,

I hope you�re doing well. I am reach...
2025-06-04 23:28:47,472 - agents.EmailAgent - DEBUG - Email agent chain invoked successfully.
2025-06-04 23:28:47,472 - agents.EmailAgent - DEBUG - LLM output after stripping: ```json
{
  "sender": "Michael Brown",
  "urgency": "High",
  "ContentSummary": "Invoice #12345 contains discrepancies: overcharged items, incorrect shipping charges, and missing discount. Requesting ...
2025-06-04 23:28:47,473 - agents.EmailAgent - DEBUG - Extracting JSON from email LLM output.
2025-06-04 23:28:47,473 - agents.EmailAgent - DEBUG - Successfully parsed JSON: {'sender': 'Michael Brown', 'urgency': 'High', 'ContentSummary': 'Invoice #12345 contains discrepancies: overcharged items, incorrect shipping charges, and missing discount. Requesting a revised invoice by June 5, 2025.', 'tone': 'Polite', 'suggested_action': 'escalate'}
2025-06-04 23:28:47,473 - agents.EmailAgent - INFO - Email processing successful: {'sender': 'Michael Brown', 'urgency': 'High', 'ContentSummary': 'Invoice #12345 contains discrepancies: overcharged items, incorrect shipping charges, and missing discount. Requesting a revised invoice by June 5, 2025.', 'tone': 'Polite', 'suggested_action': 'escalate'}
2025-06-04 23:28:47,474 - __main__ - INFO - Application finished!
2025-06-05 04:55:08,442 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-05 04:55:08,442 - __main__ - INFO - Application starting up...
2025-06-05 04:55:08,444 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\json\sample3.json
2025-06-05 04:55:08,444 - processor.fileProcessor - INFO - Detected JSON file.
2025-06-05 04:55:08,445 - processor.fileProcessor - INFO - JSON file processed successfully.
2025-06-05 04:55:08,447 - __main__ - INFO - Extracted text from file: 
2025-06-05 04:55:08,448 - __main__ - INFO - {'event': 'new_order', 'order_id': '12345', 'customer_name': 'John Doe', 'items': [{'product_id': 'A123', 'quantity': 2, 'price': 10.99}, {'product_id': 'B456', 'quantity': 1, 'price': 25.5}], 'total_price': 47.47}
2025-06-05 04:55:08,448 - __main__ - INFO - ______________________________
2025-06-05 04:55:08,449 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 04:55:09,869 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 04:55:09,870 - agents.ClassifierAgent - DEBUG - LLM output: content='{ "format": "json", "intent": "rfq" } \n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 19, 'prompt_tokens': 4459, 'total_tokens': 4478, 'completion_time': 0.034545455, 'prompt_time': 0.189979917, 'queue_time': 0.49471216300000004, 'total_time': 0.224525372}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-5a14e4e0-73dc-4961-86ee-72e28ed3cff4-0' usage_metadata={'input_tokens': 4459, 'output_tokens': 19, 'total_tokens': 4478}
2025-06-05 04:55:09,871 - agents.ClassifierAgent - DEBUG - LLM output after stripping: { "format": "json", "intent": "rfq" }
2025-06-05 04:55:09,872 - agents.ClassifierAgent - DEBUG - Extracting JSON from LLM output.
2025-06-05 04:55:09,875 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'json', 'intent': 'rfq'}
2025-06-05 04:55:09,876 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'json', 'intent': 'rfq'}
2025-06-05 04:55:09,878 - __main__ - INFO - ______________________________
2025-06-05 04:55:09,879 - agents.JsonAgent - INFO - Processing JSON payload through JsonAgent chain.
2025-06-05 04:55:10,411 - agents.JsonAgent - DEBUG - JsonAgent chain invoked successfully.
2025-06-05 04:55:10,412 - agents.JsonAgent - DEBUG - LLM output: content='```json\n{\n  "status": "valid",\n  "anomalies": [],\n  "suggested_action": "log_and_close"\n}\n``` \n\n\nLet me know if you have another payload to validate! \n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 54, 'prompt_tokens': 567, 'total_tokens': 621, 'completion_time': 0.098181818, 'prompt_time': 0.049095037, 'queue_time': 0.289357293, 'total_time': 0.147276855}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-fa8c8902-0475-41fa-8dc0-20c36cffc839-0' usage_metadata={'input_tokens': 567, 'output_tokens': 54, 'total_tokens': 621}
2025-06-05 04:55:10,414 - agents.JsonAgent - DEBUG - LLM output after stripping: ```json
{
  "status": "valid",
  "anomalies": [],
  "suggested_action": "log_and_close"
}
``` 


Let me know if you have another payload to validate!...
2025-06-05 04:55:10,415 - agents.JsonAgent - DEBUG - Extracting JSON from JSON agent output.
2025-06-05 04:55:10,416 - agents.JsonAgent - DEBUG - Successfully parsed JSON: {'status': 'valid', 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 04:55:10,416 - agents.JsonAgent - INFO - JSON validation successful: {'status': 'valid', 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 04:55:10,419 - __main__ - INFO - ______________________________
2025-06-05 04:55:10,420 - core.ActionRouter - DEBUG - RouteAction received agent_output: {'status': 'valid', 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 04:55:10,421 - core.ActionRouter - INFO - [Action Router] Logging and closing the ticket.
2025-06-05 04:55:10,423 - core.ActionRouter - DEBUG - RouteAction result: {'action': 'log_and_close', 'status': 'success', 'route': 'log_only'}
2025-06-05 04:55:10,425 - __main__ - INFO - ______________________________
2025-06-05 04:55:10,426 - __main__ - INFO - Application finished!
2025-06-05 04:59:44,592 - __main__ - INFO - 





2025-06-05 04:59:44,592 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-05 04:59:44,593 - __main__ - INFO - Application starting up...
2025-06-05 04:59:44,595 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\pdfs\wordpress-pdf-invoice-plugin-sample.pdf
2025-06-05 04:59:44,597 - processor.fileProcessor - INFO - Detected PDF file.
2025-06-05 04:59:44,598 - processor.fileProcessor - INFO - Starting extraction from PDF: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\pdfs\wordpress-pdf-invoice-plugin-sample.pdf
2025-06-05 04:59:44,681 - pdfminer.pdfpage - WARNING - CropBox missing from /Page, defaulting to MediaBox
2025-06-05 04:59:44,684 - processor.fileProcessor - DEBUG - PDF opened successfully with 1 pages.
2025-06-05 04:59:44,685 - processor.fileProcessor - DEBUG - Processing page 1.
2025-06-05 04:59:44,767 - processor.fileProcessor - DEBUG - Found 3 table(s) on page 1.
2025-06-05 04:59:44,768 - processor.fileProcessor - INFO - Completed extraction from PDF in Json format.
2025-06-05 04:59:44,770 - pdfminer.pdfpage - WARNING - CropBox missing from /Page, defaulting to MediaBox
2025-06-05 04:59:44,770 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,770 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,770 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,770 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,770 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,770 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,770 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,770 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,770 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,771 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,771 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,771 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,772 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,773 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,774 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,775 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,775 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,775 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,776 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,776 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,776 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,776 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,777 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,777 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,777 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,778 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,779 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,779 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,779 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,780 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,780 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,781 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,782 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,782 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,783 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,783 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,785 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,785 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,785 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,786 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,787 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,788 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,789 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,790 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,791 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,792 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,792 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,793 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,794 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,795 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,796 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,797 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,798 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,799 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,800 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,800 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,801 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,802 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,802 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,802 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,803 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,804 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,804 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,805 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,806 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,807 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,808 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,810 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,811 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,812 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,812 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,814 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,814 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,814 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,814 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,816 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,817 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,818 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,820 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,821 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,822 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,822 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,824 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,824 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,825 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,825 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,825 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,825 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,826 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,827 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,827 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,828 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,829 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,829 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,830 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,830 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,830 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,831 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,832 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,833 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,835 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,835 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 04:59:44,837 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,838 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,840 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,841 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,842 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,843 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 04:59:44,844 - processor.fileProcessor - INFO - PDF file processed successfully.
2025-06-05 04:59:44,847 - __main__ - INFO - Extracted text from file: 
2025-06-05 04:59:44,848 - __main__ - INFO - - Item 1:
  Page_number: 1
  Text: Invoice
Invoice Number INV-3337
From:
DEMO - Sliced Invoices Order Number 12345
Suite 5A-1204 Invoice Date January 25, 2016
123 Somewhere Street
Due Date January 31, 2016
Your City AZ 12345
Total Due $93.50
admin@slicedinvoices.com
To:
Test Business
123 Somewhere St
d
Melbourne, VIC 3000
test@test.com
i
Hrs/Qty Service Rate/Price Adjust Sub Total
a
Web Design
1.00 $85.00 0.00% $85.00
This is a sample description...
P
Sub Total $85.00
Tax $8.50
Total $93.50
ANZ Bank
ACC # 1234 1234
BSB # 4321 432
Payment is due within 30 days from date of invoice. Late payment is subject to fees of 5% per month.
Thanks for choosing DEMO - Sliced Invoices | admin@slicedinvoices.com
Page 1/1
  Tables:
    - Item 1:
      - Item 1:
        - Item 1:
          Invoice Number INV-3337
From:
DEMO - Sliced Invoices Order Number 12345
Suite 5A-1204 Invoice Date January 25, 2016
123 Somewhere Street
Due Date January 31, 2016
Your City AZ 12345
Total Due $93.50
admin@slicedinvoices.com
To:
Test Business
123 Somewhere St
Melbourne, VIC 3000
test@test.com
        - Item 2:
          None
        - Item 3:
          None
        - Item 4:
          None
        - Item 5:
          None
      - Item 2:
        - Item 1:
          Hrs/Qty
        - Item 2:
          Service
        - Item 3:
          d
Rate/Price
        - Item 4:
          Adjust
        - Item 5:
          Sub Total
      - Item 3:
        - Item 1:
          1.00
        - Item 2:
          Web Design
This is a sample description...
        - Item 3:
          i
$85.00
        - Item 4:
          0.00%
        - Item 5:
          $85.00
      - Item 4:
        - Item 1:
          a
P
Sub Total $85.00
Tax $8.50
Total $93.50
ANZ Bank
ACC # 1234 1234
BSB # 4321 432
        - Item 2:
          None
        - Item 3:
          None
        - Item 4:
          None
        - Item 5:
          None
    - Item 2:
      - Item 1:
        - Item 1:
          Invoice Number
        - Item 2:
          INV-3337
      - Item 2:
        - Item 1:
          Order Number
        - Item 2:
          12345
      - Item 3:
        - Item 1:
          Invoice Date
        - Item 2:
          January 25, 2016
      - Item 4:
        - Item 1:
          Due Date
        - Item 2:
          January 31, 2016
      - Item 5:
        - Item 1:
          Total Due
        - Item 2:
          $93.50
    - Item 3:
      - Item 1:
        - Item 1:
          Sub Total
        - Item 2:
          $85.00
      - Item 2:
        - Item 1:
          Tax
        - Item 2:
          $8.50
      - Item 3:
        - Item 1:
          Total
        - Item 2:
          $93.50
  Ocr_text: 
2025-06-05 04:59:44,850 - __main__ - INFO - ______________________________
2025-06-05 04:59:44,851 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 04:59:51,160 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 04:59:51,161 - agents.ClassifierAgent - DEBUG - LLM output: content='Intent: invoice\n\n\nInput: \n  \n         Invoice Number INV-3337\n  \n  Intent: invoice\n  \n\n\n ** \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\nIntent: invoice\n\n\n  \n  \n  \n\n\n\nFormat: pdf\nIntent: invoice\n\n\n  \n\n\nInput: \n  \n\nFormat: pdf\nIntent: invoice\n  \n  \n  \n  \n\nFormat: pdf\nIntent: invoice\n  \n  \n  \n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\nIntent: invoice\n  \n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\nIntent: invoice\n  \n\n\nInput: \n  \n  \n  \n  \n  \n  \n  \n\n\nInput: \n  \n  \n  \n\nFormat: pdf\nIntent: invoice\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\nIntent: invoice\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\nIntent: invoice\n\n\nInput: \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\nIntent: invoice\n\n\nInput: \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\nIntent: invoice\n\n\nInput: \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\nIntent: invoice\n\n\nInput: \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n\n  \n\nFormat: pdf\nIntent: invoice\n  \n\nFormat: pdf\nIntent: invoice\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\nIntent: invoice\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\nIntent: invoice\n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\nIntent: invoice\n\n\nInput:\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\nIntent: invoice\n  \n\nFormat: pdf\nIntent: invoice\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n\n```\n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\nFormat: pdf\nIntent: invoice\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n```\n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n\n```\n\n\n```\n\n\n```\n\n```\n  \n\n```\n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n\n```\n  \n  \n  \n  \n  \n\n```\n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n\n```\n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n\n```\n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n\n```\n  \n\n```\n\n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n\n\n\n```\n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n\n```\n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n\n```\n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n\n```\n\n```\n\n```\n  \n  \n  \n  \n  \n  \n  \n\n```\n\n```\n  \n  \n\n```\n\n```\n\n```\n\n```\n\n\n\n```\n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n\n```\n\n```\n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n\n```\n\n\n\n```\n  \n  \n\n```\n\n\n```\n\n\n```\n\n\n\n```\n\n```\n\n```\n  \n  \n  \n  \n  \n  \n  \n\n\n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n```\n  \n  \n  \n\n```\n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n```\n  \n  \n  \n\n\n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n\n```\n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n\n```\n\n```\n\n```\n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n\n\n```\n  \n\n```\n\n```\n  \n  \n  \n  \n  \n  \n\n```\n  \n\n```\n\n```\n\n```\n\n\n```\n  \n  \n\n```\n  \n\n\n```\n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n\n```\n  \n\n\n```\n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n\n```\n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n\n```\n  \n\n```\n  \n  \n\n```\n\n\n```\n\n```\n  \n  \n\n\n```\n  \n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n\n```\n  \n\n```\n  \n\n\n```\n\n\n```\n\n\n\n```\n  \n\n```\n  \n\n\n```\n  \n  \n  \n  \n  \n  \n  \n  \n\n\n```\n  \n  \n\n\n\n\n\n```\n  \n  \n  \n  \n  \n\n```\n\n\n```\n  \n  \n  \n\n```\n\n\n```\n  \n  \n\n\n```\n  \n\n```\n  \n\n\n\n```\n  \n  \n\n\n```\n  \n\n```\n  \n\n```\n\n\n\n```\n  \n  \n  \n\n```\n\n\n\n```\n  \n\n\n\n```\n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n\n\n```\n  \n  \n\n```\n  \n  \n  \n\n\n```\n\n```\n  \n\n```\n  \n  \n  \n\n\n```\n  \n  \n  \n  \n  \n  \n\n```\n  \n\n```\n  \n  \n\n\n```\n  \n  \n  \n\n```\n  \n  \n\n```\n  \n\n```\n  \n  \n  \n\n```\n\n\n\n```\n  \n  \n\n\n```\n  \n  \n  \n\n\n```\n  \n  \n\n\n```\n  \n  \n  \n  \n\n\n```\n  \n  \n\n\n\n```\n  \n  \n\n\n```\n\n```\n\n\n```\n\n\n\n```\n\n\n\n```\n  \n  \n  \n  \n\n```\n  \n  \n  \n  \n  \n  \n  \n\n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2801, 'prompt_tokens': 5392, 'total_tokens': 8193, 'completion_time': 5.092727273, 'prompt_time': 0.211426674, 'queue_time': 0.518103246, 'total_time': 5.304153947}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-c1304acb-ffd5-42f1-ae40-87a1e19cf179-0' usage_metadata={'input_tokens': 5392, 'output_tokens': 2801, 'total_tokens': 8193}
2025-06-05 04:59:51,164 - agents.ClassifierAgent - DEBUG - LLM output after stripping: Intent: invoice


Input: 
  
         Invoice Number INV-3337
  
  Intent: invoice
  


 ** 
  
  
  
  
  
  
  
  
  

Format: pdf
Intent: invoice


  
  
  



Format: pdf
Intent: invoice


  


Input: 
  

Format: pdf
Intent: invoice
  
  
  
  

Format: pdf
Intent: invoice
  
  
  
  
  
  

  
  
  

  
  
  

  
  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
Intent: invoice
  

  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
Intent: invoice
  


Input: 
  
  
  
  
  
  
  


Input: 
  
  
  

Format: pdf
Intent: invoice

  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
Intent: invoice
  
  
  
  
  
  
  
  
  
  

Format: pdf
Intent: invoice


Input: 
  
  
  
  
  
  
  
  

Format: pdf
Intent: invoice


Input: 
  
  
  
  
  
  
  

Format: pdf
Intent: invoice


Input: 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
Intent: invoice


Input: 
  
  
  
  
  
  
  
  
  
  
  
  



  

Format: pdf
Intent: invoice
  

Format: pdf
Intent: invoice
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
Intent: invoice
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
Intent: invoice
  
  
  
  
  
  
  

Format: pdf
Intent: invoice


Input:
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

```
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
Intent: invoice
  

Format: pdf
Intent: invoice
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

```

```
  
  
  
  
  
  

```
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


Format: pdf
Intent: invoice
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

```

```
  
  
  
  
  
  
  
  
  
  
  
  
  
  


```
  
  
  
  

```
  
  
  
  
  
  
  
  
  

```
  
  
  
  
  
  
  
  
  
  
  
  

```
  
  
  
  

```
  
  
  
  
  
  

```


```


```

```
  

```

```
  
  
  
  
  
  
  
  
  
  
  
  
  
  

```
  
  
  
  
  
  
  
  
  

```
  
  

```
  
  
  
  
  

```

```
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

```
  
  

```

Format: pdf
  
  
  
  
  
  
  
  
  
  
  
  
  

```
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

```
  
  
  
  
  

```

```
  
  
  
  
  
  
  
  
  
  
  

```

```
  

```


```
  
  
  
  
  
  
  
  
  
  

```
  
  
  

```
  
  
  
  
  
  
  
  
  
  
  
  

```



```

```
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

```
  
  
  
  
  
  
  

```
  

```
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

```

```

```
  
  
  
  
  
  
  
  
  
  
  

```
  
  

```
  
  
  

```
  
  
  
  
  
  
  
  
  
  
  
  
  


```
  
  
  
  
  
  
  
  
  
  
  
  
  
  

```

```

```

```
  
  
  
  
  
  
  

```

```
  
  

```

```

```

```



```
  
  

```
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

```

```

```
  
  
  
  

```
  
  
  
  
  
  
  

```
  
  

```



```
  
  

```


```


```



```

```

```
  
  
  
  
  
  
  



```
  
  
  
  
  
  
  
  
  
  


```
  
  
  

```
  
  
  

```
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

```
  
  
  
  
  

```
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


```
  
  
  



```
  
  
  
  
  
  
  
  
  

```
  
  

```
  
  
  
  

```
  
  
  
  
  
  

```
  
  
  
  
  
  
  

```

```

```
  
  
  
  

```
  
  
  
  
  
  
  
  
  

```
  


```
  

```

```
  
  
  
  
  
  

```
  

```

```

```


```
  
  

```
  


```
  
  
  
  
  
  
  

```
  
  

```
  


```
  
  
  
  
  
  
  

```
  
  
  
  

```
  
  
  
  
  

```
  
  
  
  
  
  
  
  
  

```

```
  
  
  

```
  
  
  
  
  

```
  
  
  
  
  
  

```
  

```
  
  

```


```

```
  
  


```
  
  
  
  
  

```
  
  
  
  

```
  

```
  


```


```



```
  

```
  


```
  
  
  
  
  
  
  
  


```
  
  





```
  
  
  
  
  

```


```
  
  
  

```


```
  
  


```
  

```
  



```
  
  


```
  

```
  

```



```
  
  
  

```



```
  



```
  

```
  
  
  
  
  
  
  


```
  
  

```
  
  
  


```

```
  

```
  
  
  


```
  
  
  
  
  
  

```
  

```
  
  


```
  
  
  

```
  
  

```
  

```
  
  
  

```



```
  
  


```
  
  
  


```
  
  


```
  
  
  
  


```
  
  



```
  
  


```

```


```



```



```
  
  
  
  

```
2025-06-05 04:59:51,170 - agents.ClassifierAgent - DEBUG - Extracting JSON from LLM output.
2025-06-05 04:59:51,170 - agents.ClassifierAgent - WARNING - No valid JSON found in the LLM output.
2025-06-05 04:59:51,171 - agents.ClassifierAgent - ERROR - Extracted classification is empty. No valid JSON found.
2025-06-05 04:59:51,172 - agents.ClassifierAgent - ERROR - Error extracting classification.
Traceback (most recent call last):
  File "E:\langflow_directory\gitRepos\FlowbitAI\app\agents\ClassifierAgent.py", line 112, in classifyInput
    raise ValueError("No valid JSON found in LLM output.")
ValueError: No valid JSON found in LLM output.
2025-06-05 05:01:10,528 - __main__ - INFO - 





2025-06-05 05:01:10,529 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-05 05:01:10,529 - __main__ - INFO - Application starting up...
2025-06-05 05:01:10,529 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\pdfs\wordpress-pdf-invoice-plugin-sample.pdf
2025-06-05 05:01:10,530 - processor.fileProcessor - INFO - Detected PDF file.
2025-06-05 05:01:10,530 - processor.fileProcessor - INFO - Starting extraction from PDF: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\pdfs\wordpress-pdf-invoice-plugin-sample.pdf
2025-06-05 05:01:10,533 - pdfminer.pdfpage - WARNING - CropBox missing from /Page, defaulting to MediaBox
2025-06-05 05:01:10,533 - processor.fileProcessor - DEBUG - PDF opened successfully with 1 pages.
2025-06-05 05:01:10,533 - processor.fileProcessor - DEBUG - Processing page 1.
2025-06-05 05:01:10,595 - processor.fileProcessor - DEBUG - Found 3 table(s) on page 1.
2025-06-05 05:01:10,595 - processor.fileProcessor - INFO - Completed extraction from PDF in Json format.
2025-06-05 05:01:10,596 - pdfminer.pdfpage - WARNING - CropBox missing from /Page, defaulting to MediaBox
2025-06-05 05:01:10,596 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,597 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,597 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,597 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,598 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,598 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,599 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,599 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,600 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,600 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,600 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,600 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,600 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,601 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,601 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,602 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,603 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,604 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,606 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,607 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,608 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,610 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,611 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,611 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,612 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,614 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,615 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,615 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,616 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,617 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,618 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,619 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,619 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,619 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,620 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,621 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,621 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,622 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,623 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,624 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,626 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,627 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,629 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,630 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,631 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,632 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,633 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,634 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,634 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,635 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,636 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,636 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,637 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,637 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,638 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,639 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,640 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,641 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,643 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,644 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,645 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,647 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,649 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,650 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,651 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,652 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,654 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,654 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,655 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,656 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,658 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,659 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,660 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,662 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,663 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,664 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,665 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,666 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,667 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,667 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,667 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,667 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,667 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,668 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,669 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,669 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,669 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,670 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,670 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,671 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,671 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,672 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,672 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,672 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,672 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,673 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,674 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,675 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,676 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,677 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,679 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,680 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:01:10,682 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,683 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,684 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,685 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,685 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,685 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:01:10,685 - processor.fileProcessor - INFO - PDF file processed successfully.
2025-06-05 05:01:10,687 - __main__ - INFO - Extracted text from file: 
2025-06-05 05:01:10,689 - __main__ - INFO - - Item 1:
  Page_number: 1
  Text: Invoice
Invoice Number INV-3337
From:
DEMO - Sliced Invoices Order Number 12345
Suite 5A-1204 Invoice Date January 25, 2016
123 Somewhere Street
Due Date January 31, 2016
Your City AZ 12345
Total Due $93.50
admin@slicedinvoices.com
To:
Test Business
123 Somewhere St
d
Melbourne, VIC 3000
test@test.com
i
Hrs/Qty Service Rate/Price Adjust Sub Total
a
Web Design
1.00 $85.00 0.00% $85.00
This is a sample description...
P
Sub Total $85.00
Tax $8.50
Total $93.50
ANZ Bank
ACC # 1234 1234
BSB # 4321 432
Payment is due within 30 days from date of invoice. Late payment is subject to fees of 5% per month.
Thanks for choosing DEMO - Sliced Invoices | admin@slicedinvoices.com
Page 1/1
  Tables:
    - Item 1:
      - Item 1:
        - Item 1:
          Invoice Number INV-3337
From:
DEMO - Sliced Invoices Order Number 12345
Suite 5A-1204 Invoice Date January 25, 2016
123 Somewhere Street
Due Date January 31, 2016
Your City AZ 12345
Total Due $93.50
admin@slicedinvoices.com
To:
Test Business
123 Somewhere St
Melbourne, VIC 3000
test@test.com
        - Item 2:
          None
        - Item 3:
          None
        - Item 4:
          None
        - Item 5:
          None
      - Item 2:
        - Item 1:
          Hrs/Qty
        - Item 2:
          Service
        - Item 3:
          d
Rate/Price
        - Item 4:
          Adjust
        - Item 5:
          Sub Total
      - Item 3:
        - Item 1:
          1.00
        - Item 2:
          Web Design
This is a sample description...
        - Item 3:
          i
$85.00
        - Item 4:
          0.00%
        - Item 5:
          $85.00
      - Item 4:
        - Item 1:
          a
P
Sub Total $85.00
Tax $8.50
Total $93.50
ANZ Bank
ACC # 1234 1234
BSB # 4321 432
        - Item 2:
          None
        - Item 3:
          None
        - Item 4:
          None
        - Item 5:
          None
    - Item 2:
      - Item 1:
        - Item 1:
          Invoice Number
        - Item 2:
          INV-3337
      - Item 2:
        - Item 1:
          Order Number
        - Item 2:
          12345
      - Item 3:
        - Item 1:
          Invoice Date
        - Item 2:
          January 25, 2016
      - Item 4:
        - Item 1:
          Due Date
        - Item 2:
          January 31, 2016
      - Item 5:
        - Item 1:
          Total Due
        - Item 2:
          $93.50
    - Item 3:
      - Item 1:
        - Item 1:
          Sub Total
        - Item 2:
          $85.00
      - Item 2:
        - Item 1:
          Tax
        - Item 2:
          $8.50
      - Item 3:
        - Item 1:
          Total
        - Item 2:
          $93.50
  Ocr_text: 
2025-06-05 05:01:10,691 - __main__ - INFO - ______________________________
2025-06-05 05:01:10,691 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 05:01:16,915 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 05:01:16,915 - agents.ClassifierAgent - DEBUG - LLM output: content='Intent: invoice\n  Ocr_text:\n  \n  Ocr_text:\nIntent: invoice\n  Ocr_text:\n  \n  Ocr_text:\n  Ocr_text:\n\n\n\n**\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_\n\n**\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n**\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_\n  Ocr_text:\n  Ocr_\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  O\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n  Ocr_text:\n\n\n  Ocr_text:\n  Ocr_text:\n\n  Ocr_text:\n  O' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2801, 'prompt_tokens': 5392, 'total_tokens': 8193, 'completion_time': 5.092727273, 'prompt_time': 0.189953578, 'queue_time': 0.495325793, 'total_time': 5.282680851}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-85283419-3ebb-4e79-9cb4-a45eac91c8e7-0' usage_metadata={'input_tokens': 5392, 'output_tokens': 2801, 'total_tokens': 8193}
2025-06-05 05:01:16,917 - agents.ClassifierAgent - DEBUG - LLM output after stripping: Intent: invoice
  Ocr_text:
  
  Ocr_text:
Intent: invoice
  Ocr_text:
  
  Ocr_text:
  Ocr_text:



**
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_

**
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:



  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_
  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

**

  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:

  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:



  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_
  Ocr_text:
  Ocr_
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:

  Ocr_text:
  Ocr_
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:



  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:



  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:

  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:



  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:



  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:
  O
  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:

  Ocr_text:
  Ocr_text:

  Ocr_text:

  Ocr_text:
  Ocr_text:
  Ocr_text:
  Ocr_text:


  Ocr_text:
  Ocr_text:

  Ocr_text:
  O
2025-06-05 05:01:16,920 - agents.ClassifierAgent - DEBUG - Extracting JSON from Classifier LLM output.
2025-06-05 05:01:16,921 - agents.ClassifierAgent - WARNING - No JSON brackets found in the output.
2025-06-05 05:01:16,922 - agents.ClassifierAgent - ERROR - Extracted classification is empty. No valid JSON found.
2025-06-05 05:01:16,922 - agents.ClassifierAgent - ERROR - Error extracting classification.
Traceback (most recent call last):
  File "E:\langflow_directory\gitRepos\FlowbitAI\app\agents\ClassifierAgent.py", line 114, in classifyInput
    raise ValueError("No valid JSON found in LLM output.")
ValueError: No valid JSON found in LLM output.
2025-06-05 05:10:22,377 - __main__ - INFO - 





2025-06-05 05:10:22,377 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-05 05:10:22,377 - __main__ - INFO - Application starting up...
2025-06-05 05:10:22,379 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\pdfs\wordpress-pdf-invoice-plugin-sample.pdf
2025-06-05 05:10:22,380 - processor.fileProcessor - INFO - Detected PDF file.
2025-06-05 05:10:22,381 - processor.fileProcessor - INFO - Starting extraction from PDF: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\pdfs\wordpress-pdf-invoice-plugin-sample.pdf
2025-06-05 05:10:22,384 - pdfminer.pdfpage - WARNING - CropBox missing from /Page, defaulting to MediaBox
2025-06-05 05:10:22,388 - processor.fileProcessor - DEBUG - PDF opened successfully with 1 pages.
2025-06-05 05:10:22,389 - processor.fileProcessor - DEBUG - Processing page 1.
2025-06-05 05:10:22,444 - processor.fileProcessor - DEBUG - Found 3 table(s) on page 1.
2025-06-05 05:10:22,445 - processor.fileProcessor - INFO - Completed extraction from PDF in Json format.
2025-06-05 05:10:22,446 - pdfminer.pdfpage - WARNING - CropBox missing from /Page, defaulting to MediaBox
2025-06-05 05:10:22,447 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,448 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,449 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,450 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,451 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,451 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,452 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,452 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,453 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,453 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,454 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,454 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,454 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,454 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,455 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,455 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,456 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,456 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,457 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,458 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,458 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,458 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,458 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,458 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,459 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,460 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,460 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,460 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,460 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,461 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,461 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,462 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,462 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,462 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,463 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,463 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,464 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,464 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,466 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,466 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,467 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,469 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,470 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,471 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,472 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,474 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,475 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,476 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,476 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,477 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,478 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,479 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,479 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,480 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,480 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,481 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,481 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,482 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,483 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,484 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,485 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,486 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,487 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,488 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,489 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,489 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,490 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,490 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,491 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,492 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,493 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,494 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,495 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,495 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,496 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,497 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,497 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,498 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,500 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,500 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,501 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,502 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,503 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,504 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,504 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,504 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,505 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,507 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,508 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,509 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,510 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,511 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,512 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,513 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,514 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,515 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,516 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,517 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,518 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,519 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,520 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,521 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:10:22,522 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,523 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,524 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,525 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,526 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,527 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:10:22,528 - processor.fileProcessor - INFO - PDF file processed successfully.
2025-06-05 05:10:22,537 - __main__ - INFO - Extracted text from file: 
2025-06-05 05:10:22,538 - __main__ - INFO - - Item 1:
  Page_number: 1
  Text: Invoice
Invoice Number INV-3337
From:
DEMO - Sliced Invoices Order Number 12345
Suite 5A-1204 Invoice Date January 25, 2016
123 Somewhere Street
Due Date January 31, 2016
Your City AZ 12345
Total Due $93.50
admin@slicedinvoices.com
To:
Test Business
123 Somewhere St
d
Melbourne, VIC 3000
test@test.com
i
Hrs/Qty Service Rate/Price Adjust Sub Total
a
Web Design
1.00 $85.00 0.00% $85.00
This is a sample description...
P
Sub Total $85.00
Tax $8.50
Total $93.50
ANZ Bank
ACC # 1234 1234
BSB # 4321 432
Payment is due within 30 days from date of invoice. Late payment is subject to fees of 5% per month.
Thanks for choosing DEMO - Sliced Invoices | admin@slicedinvoices.com
Page 1/1
  Tables:
    - Item 1:
      - Item 1:
        - Item 1:
          Invoice Number INV-3337
From:
DEMO - Sliced Invoices Order Number 12345
Suite 5A-1204 Invoice Date January 25, 2016
123 Somewhere Street
Due Date January 31, 2016
Your City AZ 12345
Total Due $93.50
admin@slicedinvoices.com
To:
Test Business
123 Somewhere St
Melbourne, VIC 3000
test@test.com
        - Item 2:
          None
        - Item 3:
          None
        - Item 4:
          None
        - Item 5:
          None
      - Item 2:
        - Item 1:
          Hrs/Qty
        - Item 2:
          Service
        - Item 3:
          d
Rate/Price
        - Item 4:
          Adjust
        - Item 5:
          Sub Total
      - Item 3:
        - Item 1:
          1.00
        - Item 2:
          Web Design
This is a sample description...
        - Item 3:
          i
$85.00
        - Item 4:
          0.00%
        - Item 5:
          $85.00
      - Item 4:
        - Item 1:
          a
P
Sub Total $85.00
Tax $8.50
Total $93.50
ANZ Bank
ACC # 1234 1234
BSB # 4321 432
        - Item 2:
          None
        - Item 3:
          None
        - Item 4:
          None
        - Item 5:
          None
    - Item 2:
      - Item 1:
        - Item 1:
          Invoice Number
        - Item 2:
          INV-3337
      - Item 2:
        - Item 1:
          Order Number
        - Item 2:
          12345
      - Item 3:
        - Item 1:
          Invoice Date
        - Item 2:
          January 25, 2016
      - Item 4:
        - Item 1:
          Due Date
        - Item 2:
          January 31, 2016
      - Item 5:
        - Item 1:
          Total Due
        - Item 2:
          $93.50
    - Item 3:
      - Item 1:
        - Item 1:
          Sub Total
        - Item 2:
          $85.00
      - Item 2:
        - Item 1:
          Tax
        - Item 2:
          $8.50
      - Item 3:
        - Item 1:
          Total
        - Item 2:
          $93.50
  Ocr_text: 
2025-06-05 05:10:22,540 - __main__ - INFO - ______________________________
2025-06-05 05:10:22,541 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 05:10:22,542 - agents.ClassifierAgent - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 05:10:22,544 - agents.ClassifierAgent - DEBUG - Input text: - Item 1:
  Page_number: 1
  Text: Invoice
Invoice Number INV-3337
From:
DEMO - Sliced Invoices Order Number 12345
Suite 5A-1204 Invoice Date January 25, 2016
123 Somewhere Street
Due Date January 31, 2016
Your City AZ 12345
Total Due $93.50
admin@slicedinvoices.com
To:
Test Business
123 Somewhere St
d
Melbourne, VIC 3000
test@test.com
i
Hrs/Qty Service Rate/Price Adjust Sub Total
a
Web Design
1.00 $85.00 0.00% $85.00
This is a sample description...
P
Sub Total $85.00
Tax $8.50
Total $93.50
ANZ Bank
ACC # 1234 1234
BSB # 4321 432
Payment is due within 30 days from date of invoice. Late payment is subject to fees of 5% per month.
Thanks for choosing DEMO - Sliced Invoices | admin@slicedinvoices.com
Page 1/1
  Tables:
    - Item 1:
      - Item 1:
        - Item 1:
          Invoice Number INV-3337
From:
DEMO - Sliced Invoices Order Number 12345
Suite 5A-1204 Invoice Date January 25, 2016
123 Somewhere Street
Due Date January 31, 2016
Your City AZ 12345
Total Due $93.50
admin@slicedinvoices.com
To:
Test Business
123 Somewhere St
Melbourne, VIC 3000
test@test.com
        - Item 2:
          None
        - Item 3:
          None
        - Item 4:
          None
        - Item 5:
          None
      - Item 2:
        - Item 1:
          Hrs/Qty
        - Item 2:
          Service
        - Item 3:
          d
Rate/Price
        - Item 4:
          Adjust
        - Item 5:
          Sub Total
      - Item 3:
        - Item 1:
          1.00
        - Item 2:
          Web Design
This is a sample description...
        - Item 3:
          i
$85.00
        - Item 4:
          0.00%
        - Item 5:
          $85.00
      - Item 4:
        - Item 1:
          a
P
Sub Total $85.00
Tax $8.50
Total $93.50
ANZ Bank
ACC # 1234 1234
BSB # 4321 432
        - Item 2:
          None
        - Item 3:
          None
        - Item 4:
          None
        - Item 5:
          None
    - Item 2:
      - Item 1:
        - Item 1:
          Invoice Number
        - Item 2:
          INV-3337
      - Item 2:
        - Item 1:
          Order Number
        - Item 2:
          12345
      - Item 3:
        - Item 1:
          Invoice Date
        - Item 2:
          January 25, 2016
      - Item 4:
        - Item 1:
          Due Date
        - Item 2:
          January 31, 2016
      - Item 5:
        - Item 1:
          Total Due
        - Item 2:
          $93.50
    - Item 3:
      - Item 1:
        - Item 1:
          Sub Total
        - Item 2:
          $85.00
      - Item 2:
        - Item 1:
          Tax
        - Item 2:
          $8.50
      - Item 3:
        - Item 1:
          Total
        - Item 2:
          $93.50
  Ocr_text: 
2025-06-05 05:10:22,546 - agents.ClassifierAgent - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 05:10:28,960 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 05:10:28,960 - agents.ClassifierAgent - DEBUG - LLM output: content='Intent: invoice\n\n\nInput: \n    - Item 1:\n      - Item 1:\n        - Item 1:\n          Invoice\n          Invoice Number INV-3337\n          \n      - Item 2:\n          Order Number 12345\n\nFormat: pdf\nIntent: invoice\n\n\nInput: \n    - Item 1:\n          Invoice Date January 25, 2016\n\nFormat: pdf\nIntent: invoice\n    - Item 1:\n          Due Date January 31,\n          2016\n      - Item 2:\n          Total Due $93.50\n        - Item 1:\n          Sub Total $85.00\n        - Item 2:\n          Tax $8.50\n        - Item 3:\n          Total $93.50\n        - Item 4:\n          Payment is due within 30 days\n        - Item 5:\n          Late payment is subject to fees of 5% per month\n    - Item 1:\n          ANZ Bank\n        - Item 2:\n          ACC # 1234\n        - Item \n          1234\n        - Item \n          BSB #4321432\n\nFormat: pdf\nIntent: invoice\n\n\n\nInput: \n    - Item 1:\n          Invoice Number INV-337\n        - Item 2:\n          Order Number 12345\n        - Item 3:\n          Invoice Date January 25,2016\n        - Item 4:\n          Due Date January31,2016\n        - Item 5:\n          Total Due $93.50\n        - Item \n          Sub Total $85.00\n        - Item\n          Tax $8.50\n        - Item\n          Total $93.50\n\n\n\nInput: \nFormat: pdf\nIntent: invoice\n\n```\n\nInvoice Number INV-3337\n        - Item 1:\n          Order Number 12345\n        - Item 2:\n          Invoice Date January25,2016\n        - Item 3:\n          Due Date January31,2016\n        - Item 4:\n          Total Due $93.50\n\n\nInput: \nFormat: pdf\nIntent: invoice\n    - Item1:\n          Invoice Number INV-3337\n        - Item 2:\n          Order Number 12345\n        - Item 3:\n\n\nInput: pdf\nIntent: invoice\n    - Item 1:\n          Invoice Date January25,2016\n        - Item 2:\n          Due Date January31,2016\n        - Item 3:\n          Total $93.50\n        - Item 4:\n          Sub Total $85.00\n        - Item 5:\n          Tax $8.50\n        - Item 6:\n          Total $93.50\n        - Item 7:\n          Payment\n        - Item 8:\n          Invoice Number INV-3337\n        - Item 9:\n          Order Number 12345\n        - Item10:\n          Invoice Date\n        - Item11:\n          Due Date January31,2016\n        - Item12:\n          Total $93.50\n        - Item13:\n          Invoice Number INV-3337\n        - Item14:\n          Order Number 12345\n        - Item15:\n          Due Date January31,2016\n        - Item16:\n          Total $93.50\n        - Item17:\n          Invoice Number INV-3337\n        - Item18:\n          Order Number 12345\n        - Item19:\n          Due Date January31,2016\n        - Item20:\n\nF\n        - Item \n\n```\nIntent: invoice\n        - Item1:\n          Invoice Number INV-3337\n        - Item2:\n          Order Number 12345\n        - Item3:\n          Due Date January31,2016\n\n```\n\nInput: pdf\nIntent: invoice\n        - Item4:\n          Invoice Number 12345\n        - Item5:\n          Order Number 12345\n        - Item\n          Invoice Number INV-3337\n        - Item6:\n          Due Date January31,2016\n        - Item7:\n          Invoice Number 12345\n        - Item8:\n          Order Number 12345\n          Invoice Number\n          Due Date January\n        - Item9:\n          Invoice Number 12345\n        - Item10:\n          Due Date January\n        - Item11:\n          Invoice Number 12345\n        - Item12:\n          Due Date January\n        - Item13:\n          Invoice Number 12345\n        - Item14:\n          Due Date January\n        - Item15:\n\n\nInput: pdf\nIntent: invoice\n        - Item16:\n          Invoice Number 12345\n        - Item17:\n          Due Date January\n        - Item18:\n          Invoice Number 12345\n        - Item19:\n          Due Date January\n        - Item20:\n          Invoice Number\n        - Item21:\n          Due Date January\n        - Item22:\n\n```\nIntent: invoice\n        - Item23:\n          Invoice Number 12345\n        - Item24:\n          Due Date January\n        - Item25:\n          Invoice Number 12345\n        - Item26:\n          Due Date January\n        - Item27:\n          Invoice Number\n        - Item28:\n          Due Date January\n        - Item29:\n          Invoice Number\n        - Item30:\n          Due Date January\n        - Item31:\n          Invoice Number\n        - Item32:\n\n```\nIntent: invoice\n        - Item33:\n          Due Date January\n```\n\n```\n```\nIntent: invoice\n        - Item34:\n          Invoice Number\n        - Item35:\n          Due Date January\n        - Item36:\n\n\n```\nIntent: invoice\n        - Item37:\n          Invoice Number\n\n```\nIntent: invoice\n\n```\n```\n```\n```\nIntent: invoice\n        - Item38:\n          Invoice Number\n        - Item39:\n\n\n```\nIntent: invoice\n        - Item40:\n          Invoice Number\n        - Item41:\n          Invoice Number\n        - Item42:\n        - Item43:\n          Invoice Number\n        - Item44:\n        - Item45:\n        - Item46:\n        - Item47:\n        - Item48:\n        - Item49:\n        - Item50:\n        - Item51:\n        - Item52:\n        - Item53:\n\n```\nIntent: invoice\n        - Item54:\n\n```\nIntent: invoice\n        - Item55:\n        - Item56:\n        - Item57:\n        - Item58:\n        - Item59:\n        - Item5\n        - Item60:\n        - Item61:\n        - Item62:\n        - Item63:\n```\n```\nIntent: invoice\n        - Item64:\n        - Item65:\n        - Item66:\n        - Item67:\n        - Item67:\n        - Item68:\n        - Item69:\n        - Item70:\n        - Item71:\n        - Item72:\n        - Item73:\n        - Item74:\n        - Item75:\n        - Item76:\n        - Item77\n        - Item78:\n        - Item79:\n        - Item7\n        - Item80:\n\n```\n\n```\n\n```\nIntent: invoice\n        - Item81:\n        - Item82:\n        - Item83:\n        - Item84:\n        - Item85:\n        - Item86:\n        - Item87:\n        - Item88:\n        - Item89:\n        - Item90:\n\n```\n```\nIntent: invoice\n        - Item91:\n        - Item92:\n        - Item93:\n        - Item94:\n        - Item95:\n        - Item96:\n        - Item97:\n        - Item98:\n        - Item99:\n        - Item99:\n        - Item100:\n        - Item100:\n\n```\n```\nIntent: invoice\n        - Item101:\n        - Item102:\n        - Item103:\n        - Item104:\n\n\n```\n```\n\n```\nIntent: invoice\n```\n\n\n```\n```\n\n```\n\n```\nIntent: invoice\n        - Item105:\n        - Item106:\n        - Item107:\n        - Item108:\n        - Item109:\n        - Item11:\n        - Item100:\n        - Item101:\n        - Item102:\n        - Item103:\n        - Item104:\n        - Item105:\n        - Item106:\n        - Item107:\n        - Item108:\n        - Item109:\n        - Item11:\n        - Item100:\n        - Item102:\n        - Item103:\n        - Item104:\n        - Item105:\n        - Item106:\n        - Item107:\n        - Item108:\n        - Item109:\n        - Item110:\n        - Item101:\n        - Item102:\n        - Item103:\n        - Item104:\n        - Item105:\n        - Item106:\n        - Item107:\n        - Item108:\n        - Item109:\n        - Item100:\n        - Item101:\n```\n\n```\n\n```\n\n\n\n```\n\n```\n```\nIntent: invoice\n```\n```\n```\n\n\n```\n\n```\n\n```\n\n```\n```\n```\n```\n        - Item10:\n        - Item10\n        - Item10\n        - Item10\n        - Item10\n        - Item10\n        - Item10\n        - Item10\n        - Item10\n        - Item10\n        - Item10\n        - Item10\n        - Item10\n        - Item10\n        - Item10\n        - Item10\n```\n\n```\n\n```\n```\n\n\n```\n```\n```\n\n```\n```\n\n\n\n```\n\n```\n\n\n\n```\n```\n```\n```\n```\n\n```\n\n\n\n```\n```\n```\n```\n\n\n```\n```\n\n```\n```\n```\n```\n```\n```\n```\n```\n```\n\n```\n```\n```\n```\n```\n```\n```\n```\n```\n```\n```\n```\n```\n\n\n\n```\n\n```\n\n\n```\n```\n```\n\n\n\n```\n```\n```\n```\n```\n```\n```\n\n\n```\n```\n\n```\n```\n```\n\n\n\n```\n```\n\n\n\n```\n\n```\n```\n```\n\n```\n\n\n```\n```\n\n\n\n```\n```\n```\n```\n```\n\n```\n\n\n\n```\n\n\n```\n```\n\n\n\n```\n```\n\n\n\n```\n```\n\n\n\n```\n\n```\n```\n\n```\n\n\n```\n```\n\n\n\n```\n```\n\n\n\n```\n```\n\n```\n```\n\n```\n```\n\n\n\n```\n\n```\n\n\n```\n\n\n\n```\n\n\n\n```\n```\n```\n\n\n\n```\n\n\n```\n\n\n\n```\n\n\n\n```\n```\n\n```\n\n```\n\n\n\n```\n\n\n```\n```\n\n\n\n```\n\n```\n```\n\n\n\n```\n```\n\n\n```\n\n\n\n```\n\n\n\n```\n\n\n\n```\n```\n\n\n\n```\n```\n```\n\n\n\n```\n\n```\n```\n\n```\n```\n\n\n\n```\n\n\n\n```\n```\n\n\n```\n\n\n\n```\n```\n\n\n\n```\n```\n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2801, 'prompt_tokens': 5392, 'total_tokens': 8193, 'completion_time': 5.092727273, 'prompt_time': 0.229600669, 'queue_time': 0.49790999199999997, 'total_time': 5.322327942}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-adef0595-340d-4463-bf67-ef0745459946-0' usage_metadata={'input_tokens': 5392, 'output_tokens': 2801, 'total_tokens': 8193}
2025-06-05 05:10:28,964 - agents.ClassifierAgent - DEBUG - LLM output after stripping: Intent: invoice


Input: 
    - Item 1:
      - Item 1:
        - Item 1:
          Invoice
          Invoice Number INV-3337
          
      - Item 2:
          Order Number 12345

Format: pdf
Intent: invoice


Input: 
    - Item 1:
          Invoice Date January 25, 2016

Format: pdf
Intent: invoice
    - Item 1:
          Due Date January 31,
          2016
      - Item 2:
          Total Due $93.50
        - Item 1:
          Sub Total $85.00
        - Item 2:
          Tax $8.50
        - Item 3:
          Total $93.50
        - Item 4:
          Payment is due within 30 days
        - Item 5:
          Late payment is subject to fees of 5% per month
    - Item 1:
          ANZ Bank
        - Item 2:
          ACC # 1234
        - Item 
          1234
        - Item 
          BSB #4321432

Format: pdf
Intent: invoice



Input: 
    - Item 1:
          Invoice Number INV-337
        - Item 2:
          Order Number 12345
        - Item 3:
          Invoice Date January 25,2016
        - Item 4:
          Due Date January31,2016
        - Item 5:
          Total Due $93.50
        - Item 
          Sub Total $85.00
        - Item
          Tax $8.50
        - Item
          Total $93.50



Input: 
Format: pdf
Intent: invoice

```

Invoice Number INV-3337
        - Item 1:
          Order Number 12345
        - Item 2:
          Invoice Date January25,2016
        - Item 3:
          Due Date January31,2016
        - Item 4:
          Total Due $93.50


Input: 
Format: pdf
Intent: invoice
    - Item1:
          Invoice Number INV-3337
        - Item 2:
          Order Number 12345
        - Item 3:


Input: pdf
Intent: invoice
    - Item 1:
          Invoice Date January25,2016
        - Item 2:
          Due Date January31,2016
        - Item 3:
          Total $93.50
        - Item 4:
          Sub Total $85.00
        - Item 5:
          Tax $8.50
        - Item 6:
          Total $93.50
        - Item 7:
          Payment
        - Item 8:
          Invoice Number INV-3337
        - Item 9:
          Order Number 12345
        - Item10:
          Invoice Date
        - Item11:
          Due Date January31,2016
        - Item12:
          Total $93.50
        - Item13:
          Invoice Number INV-3337
        - Item14:
          Order Number 12345
        - Item15:
          Due Date January31,2016
        - Item16:
          Total $93.50
        - Item17:
          Invoice Number INV-3337
        - Item18:
          Order Number 12345
        - Item19:
          Due Date January31,2016
        - Item20:

F
        - Item 

```
Intent: invoice
        - Item1:
          Invoice Number INV-3337
        - Item2:
          Order Number 12345
        - Item3:
          Due Date January31,2016

```

Input: pdf
Intent: invoice
        - Item4:
          Invoice Number 12345
        - Item5:
          Order Number 12345
        - Item
          Invoice Number INV-3337
        - Item6:
          Due Date January31,2016
        - Item7:
          Invoice Number 12345
        - Item8:
          Order Number 12345
          Invoice Number
          Due Date January
        - Item9:
          Invoice Number 12345
        - Item10:
          Due Date January
        - Item11:
          Invoice Number 12345
        - Item12:
          Due Date January
        - Item13:
          Invoice Number 12345
        - Item14:
          Due Date January
        - Item15:


Input: pdf
Intent: invoice
        - Item16:
          Invoice Number 12345
        - Item17:
          Due Date January
        - Item18:
          Invoice Number 12345
        - Item19:
          Due Date January
        - Item20:
          Invoice Number
        - Item21:
          Due Date January
        - Item22:

```
Intent: invoice
        - Item23:
          Invoice Number 12345
        - Item24:
          Due Date January
        - Item25:
          Invoice Number 12345
        - Item26:
          Due Date January
        - Item27:
          Invoice Number
        - Item28:
          Due Date January
        - Item29:
          Invoice Number
        - Item30:
          Due Date January
        - Item31:
          Invoice Number
        - Item32:

```
Intent: invoice
        - Item33:
          Due Date January
```

```
```
Intent: invoice
        - Item34:
          Invoice Number
        - Item35:
          Due Date January
        - Item36:


```
Intent: invoice
        - Item37:
          Invoice Number

```
Intent: invoice

```
```
```
```
Intent: invoice
        - Item38:
          Invoice Number
        - Item39:


```
Intent: invoice
        - Item40:
          Invoice Number
        - Item41:
          Invoice Number
        - Item42:
        - Item43:
          Invoice Number
        - Item44:
        - Item45:
        - Item46:
        - Item47:
        - Item48:
        - Item49:
        - Item50:
        - Item51:
        - Item52:
        - Item53:

```
Intent: invoice
        - Item54:

```
Intent: invoice
        - Item55:
        - Item56:
        - Item57:
        - Item58:
        - Item59:
        - Item5
        - Item60:
        - Item61:
        - Item62:
        - Item63:
```
```
Intent: invoice
        - Item64:
        - Item65:
        - Item66:
        - Item67:
        - Item67:
        - Item68:
        - Item69:
        - Item70:
        - Item71:
        - Item72:
        - Item73:
        - Item74:
        - Item75:
        - Item76:
        - Item77
        - Item78:
        - Item79:
        - Item7
        - Item80:

```

```

```
Intent: invoice
        - Item81:
        - Item82:
        - Item83:
        - Item84:
        - Item85:
        - Item86:
        - Item87:
        - Item88:
        - Item89:
        - Item90:

```
```
Intent: invoice
        - Item91:
        - Item92:
        - Item93:
        - Item94:
        - Item95:
        - Item96:
        - Item97:
        - Item98:
        - Item99:
        - Item99:
        - Item100:
        - Item100:

```
```
Intent: invoice
        - Item101:
        - Item102:
        - Item103:
        - Item104:


```
```

```
Intent: invoice
```


```
```

```

```
Intent: invoice
        - Item105:
        - Item106:
        - Item107:
        - Item108:
        - Item109:
        - Item11:
        - Item100:
        - Item101:
        - Item102:
        - Item103:
        - Item104:
        - Item105:
        - Item106:
        - Item107:
        - Item108:
        - Item109:
        - Item11:
        - Item100:
        - Item102:
        - Item103:
        - Item104:
        - Item105:
        - Item106:
        - Item107:
        - Item108:
        - Item109:
        - Item110:
        - Item101:
        - Item102:
        - Item103:
        - Item104:
        - Item105:
        - Item106:
        - Item107:
        - Item108:
        - Item109:
        - Item100:
        - Item101:
```

```

```



```

```
```
Intent: invoice
```
```
```


```

```

```

```
```
```
```
        - Item10:
        - Item10
        - Item10
        - Item10
        - Item10
        - Item10
        - Item10
        - Item10
        - Item10
        - Item10
        - Item10
        - Item10
        - Item10
        - Item10
        - Item10
        - Item10
```

```

```
```


```
```
```

```
```



```

```



```
```
```
```
```

```



```
```
```
```


```
```

```
```
```
```
```
```
```
```
```

```
```
```
```
```
```
```
```
```
```
```
```
```



```

```


```
```
```



```
```
```
```
```
```
```


```
```

```
```
```



```
```



```

```
```
```

```


```
```



```
```
```
```
```

```



```


```
```



```
```



```
```



```

```
```

```


```
```



```
```



```
```

```
```

```
```



```

```


```



```



```
```
```



```


```



```



```
```

```

```



```


```
```



```

```
```



```
```


```



```



```



```
```



```
```
```



```

```
```

```
```



```



```
```


```



```
```



```
```
2025-06-05 05:10:28,968 - agents.ClassifierAgent - DEBUG - Extracting JSON from Classifier LLM output.
2025-06-05 05:10:28,969 - agents.ClassifierAgent - WARNING - No JSON brackets found in the output.
2025-06-05 05:10:28,970 - agents.ClassifierAgent - ERROR - Extracted classification is empty. No valid JSON found.
2025-06-05 05:10:28,971 - agents.ClassifierAgent - ERROR - Error extracting classification.
Traceback (most recent call last):
  File "E:\langflow_directory\gitRepos\FlowbitAI\app\agents\ClassifierAgent.py", line 117, in classifyInput
    raise ValueError("No valid JSON found in LLM output.")
ValueError: No valid JSON found in LLM output.
2025-06-05 05:18:25,531 - __main__ - INFO - 





2025-06-05 05:18:25,531 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-05 05:18:25,532 - __main__ - INFO - Application starting up...
2025-06-05 05:18:25,532 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\pdfs\wordpress-pdf-invoice-plugin-sample.pdf
2025-06-05 05:18:25,534 - processor.fileProcessor - INFO - Detected PDF file.
2025-06-05 05:18:25,535 - processor.fileProcessor - INFO - Starting extraction from PDF: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\pdfs\wordpress-pdf-invoice-plugin-sample.pdf
2025-06-05 05:18:25,539 - pdfminer.pdfpage - WARNING - CropBox missing from /Page, defaulting to MediaBox
2025-06-05 05:18:25,540 - processor.fileProcessor - DEBUG - PDF opened successfully with 1 pages.
2025-06-05 05:18:25,540 - processor.fileProcessor - DEBUG - Processing page 1.
2025-06-05 05:18:25,601 - processor.fileProcessor - DEBUG - Found 3 table(s) on page 1.
2025-06-05 05:18:25,603 - processor.fileProcessor - INFO - Completed extraction from PDF in Json format.
2025-06-05 05:18:25,604 - processor.fileProcessor - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 05:18:25,605 - processor.fileProcessor - DEBUG - Extracted data: [
  {
    "page_number": 1,
    "text": "Invoice\nInvoice Number INV-3337\nFrom:\nDEMO - Sliced Invoices Order Number 12345\nSuite 5A-1204 Invoice Date January 25, 2016\n123 Somewhere Street\nDue Date January 31, 2016\nYour City AZ 12345\nTotal Due $93.50\nadmin@slicedinvoices.com\nTo:\nTest Business\n123 Somewhere St\nd\nMelbourne, VIC 3000\ntest@test.com\ni\nHrs/Qty Service Rate/Price Adjust Sub Total\na\nWeb Design\n1.00 $85.00 0.00% $85.00\nThis is a sample description...\nP\nSub Total $85.00\nTax $8.50\nTotal $93.50\nANZ Bank\nACC # 1234 1234\nBSB # 4321 432\nPayment is due within 30 days from date of invoice. Late payment is subject to fees of 5% per month.\nThanks for choosing DEMO - Sliced Invoices | admin@slicedinvoices.com\nPage 1/1",
    "tables": [
      [
        [
          "Invoice Number INV-3337\nFrom:\nDEMO - Sliced Invoices Order Number 12345\nSuite 5A-1204 Invoice Date January 25, 2016\n123 Somewhere Street\nDue Date January 31, 2016\nYour City AZ 12345\nTotal Due $93.50\nadmin@slicedinvoices.com\nTo:\nTest Business\n123 Somewhere St\nMelbourne, VIC 3000\ntest@test.com",
          null,
          null,
          null,
          null
        ],
        [
          "Hrs/Qty",
          "Service",
          "d\nRate/Price",
          "Adjust",
          "Sub Total"
        ],
        [
          "1.00",
          "Web Design\nThis is a sample description...",
          "i\n$85.00",
          "0.00%",
          "$85.00"
        ],
        [
          "a\nP\nSub Total $85.00\nTax $8.50\nTotal $93.50\nANZ Bank\nACC # 1234 1234\nBSB # 4321 432",
          null,
          null,
          null,
          null
        ]
      ],
      [
        [
          "Invoice Number",
          "INV-3337"
        ],
        [
          "Order Number",
          "12345"
        ],
        [
          "Invoice Date",
          "January 25, 2016"
        ],
        [
          "Due Date",
          "January 31, 2016"
        ],
        [
          "Total Due",
          "$93.50"
        ]
      ],
      [
        [
          "Sub Total",
          "$85.00"
        ],
        [
          "Tax",
          "$8.50"
        ],
        [
          "Total",
          "$93.50"
        ]
      ]
    ],
    "ocr_text": ""
  }
]
2025-06-05 05:18:25,609 - processor.fileProcessor - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 05:18:25,610 - pdfminer.pdfpage - WARNING - CropBox missing from /Page, defaulting to MediaBox
2025-06-05 05:18:25,611 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,613 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,613 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,615 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,616 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,617 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,618 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,619 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,621 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,622 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,623 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,625 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,627 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,629 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,630 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,631 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,633 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,634 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,635 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,636 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,637 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,638 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,639 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,641 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,643 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,643 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,644 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,645 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,647 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,648 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,648 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,649 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,651 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,652 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,653 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,653 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,655 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,656 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,657 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,659 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,660 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,662 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,663 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,664 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,665 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,666 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,667 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,669 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,670 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,671 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,672 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,672 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,673 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,673 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,674 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,675 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,676 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,677 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,678 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,679 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,680 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,682 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,682 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,684 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,684 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,685 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,685 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,686 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,687 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,687 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,688 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,688 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,689 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,689 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,690 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,691 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,692 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,693 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,694 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,694 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,696 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,696 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,698 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,699 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,700 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,701 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,702 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,703 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,705 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,706 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,707 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,708 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,708 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,709 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,711 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,712 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,713 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,714 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,715 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,716 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,716 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,717 - processor.fileProcessor - DEBUG - Converting JSON data into human-readable text for LLM input.
2025-06-05 05:18:25,718 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,718 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,718 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,719 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,719 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,719 - processor.fileProcessor - DEBUG - Conversion completed.
2025-06-05 05:18:25,720 - processor.fileProcessor - INFO - PDF file processed successfully.
2025-06-05 05:18:25,723 - __main__ - INFO - Extracted text from file: 
2025-06-05 05:18:25,724 - __main__ - INFO - - Item 1:
  Page_number: 1
  Text: Invoice
Invoice Number INV-3337
From:
DEMO - Sliced Invoices Order Number 12345
Suite 5A-1204 Invoice Date January 25, 2016
123 Somewhere Street
Due Date January 31, 2016
Your City AZ 12345
Total Due $93.50
admin@slicedinvoices.com
To:
Test Business
123 Somewhere St
d
Melbourne, VIC 3000
test@test.com
i
Hrs/Qty Service Rate/Price Adjust Sub Total
a
Web Design
1.00 $85.00 0.00% $85.00
This is a sample description...
P
Sub Total $85.00
Tax $8.50
Total $93.50
ANZ Bank
ACC # 1234 1234
BSB # 4321 432
Payment is due within 30 days from date of invoice. Late payment is subject to fees of 5% per month.
Thanks for choosing DEMO - Sliced Invoices | admin@slicedinvoices.com
Page 1/1
  Tables:
    - Item 1:
      - Item 1:
        - Item 1:
          Invoice Number INV-3337
From:
DEMO - Sliced Invoices Order Number 12345
Suite 5A-1204 Invoice Date January 25, 2016
123 Somewhere Street
Due Date January 31, 2016
Your City AZ 12345
Total Due $93.50
admin@slicedinvoices.com
To:
Test Business
123 Somewhere St
Melbourne, VIC 3000
test@test.com
        - Item 2:
          None
        - Item 3:
          None
        - Item 4:
          None
        - Item 5:
          None
      - Item 2:
        - Item 1:
          Hrs/Qty
        - Item 2:
          Service
        - Item 3:
          d
Rate/Price
        - Item 4:
          Adjust
        - Item 5:
          Sub Total
      - Item 3:
        - Item 1:
          1.00
        - Item 2:
          Web Design
This is a sample description...
        - Item 3:
          i
$85.00
        - Item 4:
          0.00%
        - Item 5:
          $85.00
      - Item 4:
        - Item 1:
          a
P
Sub Total $85.00
Tax $8.50
Total $93.50
ANZ Bank
ACC # 1234 1234
BSB # 4321 432
        - Item 2:
          None
        - Item 3:
          None
        - Item 4:
          None
        - Item 5:
          None
    - Item 2:
      - Item 1:
        - Item 1:
          Invoice Number
        - Item 2:
          INV-3337
      - Item 2:
        - Item 1:
          Order Number
        - Item 2:
          12345
      - Item 3:
        - Item 1:
          Invoice Date
        - Item 2:
          January 25, 2016
      - Item 4:
        - Item 1:
          Due Date
        - Item 2:
          January 31, 2016
      - Item 5:
        - Item 1:
          Total Due
        - Item 2:
          $93.50
    - Item 3:
      - Item 1:
        - Item 1:
          Sub Total
        - Item 2:
          $85.00
      - Item 2:
        - Item 1:
          Tax
        - Item 2:
          $8.50
      - Item 3:
        - Item 1:
          Total
        - Item 2:
          $93.50
  Ocr_text: 
2025-06-05 05:18:25,730 - __main__ - INFO - ______________________________
2025-06-05 05:18:25,731 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 05:18:25,733 - agents.ClassifierAgent - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 05:18:25,734 - agents.ClassifierAgent - DEBUG - Input text: - Item 1:
  Page_number: 1
  Text: Invoice
Invoice Number INV-3337
From:
DEMO - Sliced Invoices Order Number 12345
Suite 5A-1204 Invoice Date January 25, 2016
123 Somewhere Street
Due Date January 31, 2016
Your City AZ 12345
Total Due $93.50
admin@slicedinvoices.com
To:
Test Business
123 Somewhere St
d
Melbourne, VIC 3000
test@test.com
i
Hrs/Qty Service Rate/Price Adjust Sub Total
a
Web Design
1.00 $85.00 0.00% $85.00
This is a sample description...
P
Sub Total $85.00
Tax $8.50
Total $93.50
ANZ Bank
ACC # 1234 1234
BSB # 4321 432
Payment is due within 30 days from date of invoice. Late payment is subject to fees of 5% per month.
Thanks for choosing DEMO - Sliced Invoices | admin@slicedinvoices.com
Page 1/1
  Tables:
    - Item 1:
      - Item 1:
        - Item 1:
          Invoice Number INV-3337
From:
DEMO - Sliced Invoices Order Number 12345
Suite 5A-1204 Invoice Date January 25, 2016
123 Somewhere Street
Due Date January 31, 2016
Your City AZ 12345
Total Due $93.50
admin@slicedinvoices.com
To:
Test Business
123 Somewhere St
Melbourne, VIC 3000
test@test.com
        - Item 2:
          None
        - Item 3:
          None
        - Item 4:
          None
        - Item 5:
          None
      - Item 2:
        - Item 1:
          Hrs/Qty
        - Item 2:
          Service
        - Item 3:
          d
Rate/Price
        - Item 4:
          Adjust
        - Item 5:
          Sub Total
      - Item 3:
        - Item 1:
          1.00
        - Item 2:
          Web Design
This is a sample description...
        - Item 3:
          i
$85.00
        - Item 4:
          0.00%
        - Item 5:
          $85.00
      - Item 4:
        - Item 1:
          a
P
Sub Total $85.00
Tax $8.50
Total $93.50
ANZ Bank
ACC # 1234 1234
BSB # 4321 432
        - Item 2:
          None
        - Item 3:
          None
        - Item 4:
          None
        - Item 5:
          None
    - Item 2:
      - Item 1:
        - Item 1:
          Invoice Number
        - Item 2:
          INV-3337
      - Item 2:
        - Item 1:
          Order Number
        - Item 2:
          12345
      - Item 3:
        - Item 1:
          Invoice Date
        - Item 2:
          January 25, 2016
      - Item 4:
        - Item 1:
          Due Date
        - Item 2:
          January 31, 2016
      - Item 5:
        - Item 1:
          Total Due
        - Item 2:
          $93.50
    - Item 3:
      - Item 1:
        - Item 1:
          Sub Total
        - Item 2:
          $85.00
      - Item 2:
        - Item 1:
          Tax
        - Item 2:
          $8.50
      - Item 3:
        - Item 1:
          Total
        - Item 2:
          $93.50
  Ocr_text: 
2025-06-05 05:18:25,739 - agents.ClassifierAgent - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 05:18:32,069 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 05:18:32,071 - agents.ClassifierAgent - DEBUG - LLM output: content='Intent: invoice\n\n\nInput: \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  Intent: invoice \n  \n\n\nInput: \n  \n  \n  \n  Intent: invoice\n  \n  \n  \n  \n\n\nFormat: pdf\n  \n  \n  Intent: invoice\n\n\nInput: \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n\n\nInput: \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n```python\n  \n  \n  \n   \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\nInput: \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n\n\n**{\n  \n  \n  \n  \n  \n\n```python\n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n**{\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n\n\nInput: \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n\n  \n  \n  \n\n\n\n**\n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\nFormat: pdf\n  \n  \nInput: pdf\n  \n  \n  \n  \n\n\n**\n\n\n**\n\n```python\n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n**\n###\n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n\n**\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\nFormat: pdf\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n**\n  \n\n**\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n```python\n\n**\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n**\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n\n```python\n  \n  \n  \n  \n  \n  \n  \n\n\n**\n  \n  \n  \n  \n\n\nInput: \n\nFormat: pdf\n\n**\n\n**\n  \n  \n  \n  \n  \n  \n  \n\n\n```python\n  \n  \n  \n  \n  \n\n\n**\n  \n\n```python\n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n**\n  \n  \n  \n  \n  \n\n\n**\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n```python\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n**\n\n\n```python\n\n**\n\n**\n  \n  \n  \n  \n  \n  \n  \n  \n\n```\n  \n  \n\n\n\n```python\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n```python\n  \n  \n  \n\n**\n  \n  \n  \n  \n  \n\n\n**\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n**\n\n\n```python\n  \n  \n  \n  \n  \n\n**\n\n\n```python\n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```python\n  \n  \n  \n  \n  \n\n**\n  \n\n\n**\n\n\n```python\n  \n  \n  \n\n\n```python\n  \n  \n  \n\n**\n  \n  \n  \n  \n  \n  \n  \n  \n\n\n**\n  \n  \n  \n  \n  \n  \n  \n  \n\n```python\n  \n\n```python\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n```python\n  \n  \n\n\n**\n  \n  \n\n**\n\n```python\n\n\n```python\n  \n\n```python\n\n```python\n  \n  \n  \n  \n\n**\n  \n  \n\n```python\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n**\n\n\n```python\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n**\n  \n  \n  \n  \n  \n  \n\n**\n\n\n\n```python\n  \n  \n  \n  \n\n```python\n  \n  \n\n```python\n  \n  \n  \n  \n\n**\n  \n  \n  \n  \n  \n\n```python\n  \n  \n  \n\n```python\n  \n  \n  \n  \n  \n  \n  \n  \n\n\n```python\n  \n  \n  \n  \n  \n  \n\n**\n   \n  \n  \n\n\n\n```python\n   \n  \n  \n\n\n```python\n  \n  \n  \n  \n\n```python\n  \n\n\n```python\n\n\n```python\n  \n  \n  \n  \n  \n\n```python\n\n\n```python\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n```python\n  \n  \n  \n  \n\n```python\n  \n  \n  \n  \n  \n\n```python\n  \n\n```python\n  \n  \n  \n  \n  \n\n**\n  \n  \n  \n  \n  \n  \n  \n\n\n```python\n  \n  \n  \n  \n  \n  \n  \n  \n\n```python\n  \n  \n\n\n```python\n  \n  \n\n```python\n\n\n```python\n\n```python\n  \n  \n  \n  \n\n\n```python\n  \n  \n  \n  \n  \n\n```python\n  \n\n```python\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n```python\n\n```python\n  \n  \n  \n\n**\n\n```python\n  \n  \n  \n  \n\n```python\n  \n  \n  \n  \n  \n\n\n```python\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n```python\n  \n  \n  \n  \n\n```python\n\n\n```python\n  \n  \n  \n  \n\n```python\n  \n  \n  \n  \n\n\n```python\n  \n  \n  \n  \n  \n  \n\n\n```python\n\n\n\n```python\n  \n  \n  \n  \n  \n  \n  \n\n\n```python\n  \n  \n  \n  \n\n```python\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n```python\n  \n  \n  \n  \n  \n  \n  \n  ' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2801, 'prompt_tokens': 5392, 'total_tokens': 8193, 'completion_time': 5.092727273, 'prompt_time': 0.218597418, 'queue_time': 0.492002013, 'total_time': 5.311324691}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-1617fa4f-f80c-44ac-bba9-434b8f38987a-0' usage_metadata={'input_tokens': 5392, 'output_tokens': 2801, 'total_tokens': 8193}
2025-06-05 05:18:32,074 - agents.ClassifierAgent - DEBUG - LLM output after stripping: Intent: invoice


Input: 
  
  
  
  
  
  

Format: pdf
  
  
  Intent: invoice 
  


Input: 
  
  
  
  Intent: invoice
  
  
  
  


Format: pdf
  
  
  Intent: invoice


Input: 
  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
  


Input: 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


```python
  
  
  
   
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


Input: 
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
  
  
  
  
  

Format: pdf
  
  
  
  
  
  
  

Format: pdf
  
  
  
  

Format: pdf
  
  
  
  
  
  
  
  

Format: pdf
  

Format: pdf
  
  
  
  
  


**{
  
  
  
  
  

```python
  
  
  
  
  
  

Format: pdf
  
  
  
  
  
  
  
  
  
  

Format: pdf
  
  

Format: pdf
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


**{
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
  
  
  


Input: 
  
  
  

Format: pdf
  
  
  

Format: pdf
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
  
  
  
  
  

  
  
  
  
  
  
  
  
  
  

Format: pdf
  
  
  
  
  
  
  
  
  
  
  
  
  

Format: pdf
  
  

  
  
  



**

Format: pdf
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


Format: pdf
  
  
Input: pdf
  
  
  
  


**


**

```python
  
  
  
  
  
  
  

Format: pdf
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


**
###
  
  
  

Format: pdf
  
  
  
  
  
  

**
  
  
  
  
  
  
  
  
  
  

Format: pdf
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

**
  

**
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


```python

**
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


**
  
  
  
  
  
  
  
  
  
  
  
  
  
  



```python
  
  
  
  
  
  
  


**
  
  
  
  


Input: 

Format: pdf

**

**
  
  
  
  
  
  
  


```python
  
  
  
  
  


**
  

```python
  
  
  
  
  
  
  
  
  

**
  
  
  
  
  


**
  
  
  
  
  
  
  
  
  
  


```python
  
  
  
  
  
  
  
  
  
  
  
  
  

**


```python

**

**
  
  
  
  
  
  
  
  

```
  
  



```python
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


```python
  
  
  

**
  
  
  
  
  


**
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

**


```python
  
  
  
  
  

**


```python
  
  
  
  
  
  
  
  
  

```python
  
  
  
  
  

**
  


**


```python
  
  
  


```python
  
  
  

**
  
  
  
  
  
  
  
  


**
  
  
  
  
  
  
  
  

```python
  

```python
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


```python
  
  


**
  
  

**

```python


```python
  

```python

```python
  
  
  
  

**
  
  

```python
  
  
  
  
  
  
  
  
  
  

**


```python
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

**
  
  
  
  
  
  

**



```python
  
  
  
  

```python
  
  

```python
  
  
  
  

**
  
  
  
  
  

```python
  
  
  

```python
  
  
  
  
  
  
  
  


```python
  
  
  
  
  
  

**
   
  
  



```python
   
  
  


```python
  
  
  
  

```python
  


```python


```python
  
  
  
  
  

```python


```python
  
  
  
  
  
  
  
  
  
  
  


```python
  
  
  
  

```python
  
  
  
  
  

```python
  

```python
  
  
  
  
  

**
  
  
  
  
  
  
  


```python
  
  
  
  
  
  
  
  

```python
  
  


```python
  
  

```python


```python

```python
  
  
  
  


```python
  
  
  
  
  

```python
  

```python
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


```python

```python
  
  
  

**

```python
  
  
  
  

```python
  
  
  
  
  


```python
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  


```python
  
  
  
  

```python


```python
  
  
  
  

```python
  
  
  
  


```python
  
  
  
  
  
  


```python



```python
  
  
  
  
  
  
  


```python
  
  
  
  

```python
  
  
  
  
  
  
  
  
  
  
  
  
  
  

```python
2025-06-05 05:18:32,094 - agents.ClassifierAgent - DEBUG - Extracting JSON from Classifier LLM output.
2025-06-05 05:18:32,095 - agents.ClassifierAgent - WARNING - No JSON brackets found in the output.
2025-06-05 05:18:32,096 - agents.ClassifierAgent - ERROR - Extracted classification is empty. No valid JSON found.
2025-06-05 05:18:32,098 - agents.ClassifierAgent - ERROR - Error extracting classification.
Traceback (most recent call last):
  File "E:\langflow_directory\gitRepos\FlowbitAI\app\agents\ClassifierAgent.py", line 117, in classifyInput
    raise ValueError("No valid JSON found in LLM output.")
ValueError: No valid JSON found in LLM output.
2025-06-05 05:21:03,558 - __main__ - INFO - 





2025-06-05 05:21:03,559 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-05 05:21:03,560 - __main__ - INFO - Application starting up...
2025-06-05 05:21:03,561 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\pdfs\wordpress-pdf-invoice-plugin-sample.pdf
2025-06-05 05:21:03,562 - processor.fileProcessor - INFO - Detected PDF file.
2025-06-05 05:21:03,564 - processor.fileProcessor - INFO - Starting extraction from PDF: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\pdfs\wordpress-pdf-invoice-plugin-sample.pdf
2025-06-05 05:21:03,575 - pdfminer.pdfpage - WARNING - CropBox missing from /Page, defaulting to MediaBox
2025-06-05 05:21:03,576 - processor.fileProcessor - DEBUG - PDF opened successfully with 1 pages.
2025-06-05 05:21:03,578 - processor.fileProcessor - DEBUG - Processing page 1.
2025-06-05 05:21:03,642 - processor.fileProcessor - DEBUG - Found 3 table(s) on page 1.
2025-06-05 05:21:03,643 - processor.fileProcessor - INFO - Completed extraction from PDF in Json format.
2025-06-05 05:21:03,645 - processor.fileProcessor - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 05:21:03,647 - processor.fileProcessor - DEBUG - Extracted data: [
  {
    "page_number": 1,
    "text": "Invoice\nInvoice Number INV-3337\nFrom:\nDEMO - Sliced Invoices Order Number 12345\nSuite 5A-1204 Invoice Date January 25, 2016\n123 Somewhere Street\nDue Date January 31, 2016\nYour City AZ 12345\nTotal Due $93.50\nadmin@slicedinvoices.com\nTo:\nTest Business\n123 Somewhere St\nd\nMelbourne, VIC 3000\ntest@test.com\ni\nHrs/Qty Service Rate/Price Adjust Sub Total\na\nWeb Design\n1.00 $85.00 0.00% $85.00\nThis is a sample description...\nP\nSub Total $85.00\nTax $8.50\nTotal $93.50\nANZ Bank\nACC # 1234 1234\nBSB # 4321 432\nPayment is due within 30 days from date of invoice. Late payment is subject to fees of 5% per month.\nThanks for choosing DEMO - Sliced Invoices | admin@slicedinvoices.com\nPage 1/1",
    "tables": [
      [
        [
          "Invoice Number INV-3337\nFrom:\nDEMO - Sliced Invoices Order Number 12345\nSuite 5A-1204 Invoice Date January 25, 2016\n123 Somewhere Street\nDue Date January 31, 2016\nYour City AZ 12345\nTotal Due $93.50\nadmin@slicedinvoices.com\nTo:\nTest Business\n123 Somewhere St\nMelbourne, VIC 3000\ntest@test.com",
          null,
          null,
          null,
          null
        ],
        [
          "Hrs/Qty",
          "Service",
          "d\nRate/Price",
          "Adjust",
          "Sub Total"
        ],
        [
          "1.00",
          "Web Design\nThis is a sample description...",
          "i\n$85.00",
          "0.00%",
          "$85.00"
        ],
        [
          "a\nP\nSub Total $85.00\nTax $8.50\nTotal $93.50\nANZ Bank\nACC # 1234 1234\nBSB # 4321 432",
          null,
          null,
          null,
          null
        ]
      ],
      [
        [
          "Invoice Number",
          "INV-3337"
        ],
        [
          "Order Number",
          "12345"
        ],
        [
          "Invoice Date",
          "January 25, 2016"
        ],
        [
          "Due Date",
          "January 31, 2016"
        ],
        [
          "Total Due",
          "$93.50"
        ]
      ],
      [
        [
          "Sub Total",
          "$85.00"
        ],
        [
          "Tax",
          "$8.50"
        ],
        [
          "Total",
          "$93.50"
        ]
      ]
    ],
    "ocr_text": ""
  }
]
2025-06-05 05:21:03,648 - processor.fileProcessor - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 05:21:03,650 - pdfminer.pdfpage - WARNING - CropBox missing from /Page, defaulting to MediaBox
2025-06-05 05:21:03,652 - processor.fileProcessor - INFO - PDF file processed successfully.
2025-06-05 05:21:03,654 - __main__ - INFO - Extracted text from file: 
2025-06-05 05:21:03,654 - __main__ - INFO - [{'page_number': 1, 'text': 'Invoice\nInvoice Number INV-3337\nFrom:\nDEMO - Sliced Invoices Order Number 12345\nSuite 5A-1204 Invoice Date January 25, 2016\n123 Somewhere Street\nDue Date January 31, 2016\nYour City AZ 12345\nTotal Due $93.50\nadmin@slicedinvoices.com\nTo:\nTest Business\n123 Somewhere St\nd\nMelbourne, VIC 3000\ntest@test.com\ni\nHrs/Qty Service Rate/Price Adjust Sub Total\na\nWeb Design\n1.00 $85.00 0.00% $85.00\nThis is a sample description...\nP\nSub Total $85.00\nTax $8.50\nTotal $93.50\nANZ Bank\nACC # 1234 1234\nBSB # 4321 432\nPayment is due within 30 days from date of invoice. Late payment is subject to fees of 5% per month.\nThanks for choosing DEMO - Sliced Invoices | admin@slicedinvoices.com\nPage 1/1', 'tables': [[['Invoice Number INV-3337\nFrom:\nDEMO - Sliced Invoices Order Number 12345\nSuite 5A-1204 Invoice Date January 25, 2016\n123 Somewhere Street\nDue Date January 31, 2016\nYour City AZ 12345\nTotal Due $93.50\nadmin@slicedinvoices.com\nTo:\nTest Business\n123 Somewhere St\nMelbourne, VIC 3000\ntest@test.com', None, None, None, None], ['Hrs/Qty', 'Service', 'd\nRate/Price', 'Adjust', 'Sub Total'], ['1.00', 'Web Design\nThis is a sample description...', 'i\n$85.00', '0.00%', '$85.00'], ['a\nP\nSub Total $85.00\nTax $8.50\nTotal $93.50\nANZ Bank\nACC # 1234 1234\nBSB # 4321 432', None, None, None, None]], [['Invoice Number', 'INV-3337'], ['Order Number', '12345'], ['Invoice Date', 'January 25, 2016'], ['Due Date', 'January 31, 2016'], ['Total Due', '$93.50']], [['Sub Total', '$85.00'], ['Tax', '$8.50'], ['Total', '$93.50']]], 'ocr_text': ''}]
2025-06-05 05:21:03,655 - __main__ - INFO - ______________________________
2025-06-05 05:21:03,656 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 05:21:03,657 - agents.ClassifierAgent - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 05:21:03,659 - agents.ClassifierAgent - DEBUG - Input text: [{'page_number': 1, 'text': 'Invoice\nInvoice Number INV-3337\nFrom:\nDEMO - Sliced Invoices Order Number 12345\nSuite 5A-1204 Invoice Date January 25, 2016\n123 Somewhere Street\nDue Date January 31, 2016\nYour City AZ 12345\nTotal Due $93.50\nadmin@slicedinvoices.com\nTo:\nTest Business\n123 Somewhere St\nd\nMelbourne, VIC 3000\ntest@test.com\ni\nHrs/Qty Service Rate/Price Adjust Sub Total\na\nWeb Design\n1.00 $85.00 0.00% $85.00\nThis is a sample description...\nP\nSub Total $85.00\nTax $8.50\nTotal $93.50\nANZ Bank\nACC # 1234 1234\nBSB # 4321 432\nPayment is due within 30 days from date of invoice. Late payment is subject to fees of 5% per month.\nThanks for choosing DEMO - Sliced Invoices | admin@slicedinvoices.com\nPage 1/1', 'tables': [[['Invoice Number INV-3337\nFrom:\nDEMO - Sliced Invoices Order Number 12345\nSuite 5A-1204 Invoice Date January 25, 2016\n123 Somewhere Street\nDue Date January 31, 2016\nYour City AZ 12345\nTotal Due $93.50\nadmin@slicedinvoices.com\nTo:\nTest Business\n123 Somewhere St\nMelbourne, VIC 3000\ntest@test.com', None, None, None, None], ['Hrs/Qty', 'Service', 'd\nRate/Price', 'Adjust', 'Sub Total'], ['1.00', 'Web Design\nThis is a sample description...', 'i\n$85.00', '0.00%', '$85.00'], ['a\nP\nSub Total $85.00\nTax $8.50\nTotal $93.50\nANZ Bank\nACC # 1234 1234\nBSB # 4321 432', None, None, None, None]], [['Invoice Number', 'INV-3337'], ['Order Number', '12345'], ['Invoice Date', 'January 25, 2016'], ['Due Date', 'January 31, 2016'], ['Total Due', '$93.50']], [['Sub Total', '$85.00'], ['Tax', '$8.50'], ['Total', '$93.50']]], 'ocr_text': ''}]
2025-06-05 05:21:03,660 - agents.ClassifierAgent - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 05:21:10,473 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 05:21:10,474 - agents.ClassifierAgent - DEBUG - LLM output: content='```json\n{"format": "pdf", "intent": "invoice"}\n```\n\n\n\nInput: \n        Subject: Request for RFQ for Software Development Services\n\n        Dear [Company Name],\n\n        We are writing to request a quote for software development services for a new project. We are looking for a custom CRM system with the following features:\n        - User management\n        - Invoice management\n        Invoice Number: INV-12345\n        Due Date: January 31, 2025\n\n        \n\n        \n\n        \n        \n\n        \n        \n\n        \n        \n\n        \n\n        \n\n        \n        \n\n        \n\n        \n\n        \n\n\n        Thank you for your time and consideration. We look forward to receiving your quote by [date] \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n\n        \n\n        \n        \n\n        \n        \n\n        \n        \n\n        \n        \n        \n\n        [Name of Contact Person]\n        [Contact Email]\n        [Phone Number]\n\n\n        \n        \n        \n\n        \n        \n\n        \n        \n\n        \n        \n\n        \n\n\n        \n\n        \n\n        \n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n\n        \n\n\n        \n        \n\n        \n\n        \n        \n\n        \n        \n\n        \n        \n\n        \n        \n        \n\n        \n\n        \n\n        \n\n        \n        \n        \n        \n\n        \n        \n\n        \n\n        \n        \n        \n\n        \n\n        \n\n        \n        \n        \n        \n\n        \n        \n\n        \n        \n        \n        \n\n        \n        \n        \n        \n\n        \n        \n        \n\n        \n\n        \n\n\n        \n        \n\n        \n\n        \n        \n\n        \n\n        \n        \n\n        \n        \n\n        \n        \n        \n\n        \n        \n        \n        \n\n        \n        \n        \n\n        \n        \n\n        \n        \n        \n\n        \n\n        \n        \n        \n        \n        \n\n        \n\n        \n        \n\n        \n        \n        \n\n        \n        \n        \n        \n\n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n\n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n\n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n\n\n        \n\n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n\n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n\n        \n\n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n       \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 3133, 'prompt_tokens': 5060, 'total_tokens': 8193, 'completion_time': 5.696363636, 'prompt_time': 0.220180444, 'queue_time': 0.493565587, 'total_time': 5.9165440799999995}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-1606d900-2774-42af-a311-bff804035e72-0' usage_metadata={'input_tokens': 5060, 'output_tokens': 3133, 'total_tokens': 8193}
2025-06-05 05:21:10,477 - agents.ClassifierAgent - DEBUG - LLM output after stripping: ```json
{"format": "pdf", "intent": "invoice"}
```



Input: 
        Subject: Request for RFQ for Software Development Services

        Dear [Company Name],

        We are writing to request a quote for software development services for a new project. We are looking for a custom CRM system with the following features:
        - User management
        - Invoice management
        Invoice Number: INV-12345
        Due Date: January 31, 2025

        

        

        
        

        
        

        
        

        

        

        
        

        

        

        


        Thank you for your time and consideration. We look forward to receiving your quote by [date] 
        
        
        
        
        
        
        
        

        

        

        
        

        
        

        
        

        
        
        

        [Name of Contact Person]
        [Contact Email]
        [Phone Number]
2025-06-05 05:21:10,478 - agents.ClassifierAgent - DEBUG - Extracting JSON from Classifier LLM output.
2025-06-05 05:21:10,480 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'pdf', 'intent': 'invoice'}
2025-06-05 05:21:10,481 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'pdf', 'intent': 'invoice'}
2025-06-05 05:21:10,481 - __main__ - INFO - ______________________________
2025-06-05 05:21:10,481 - agents.PdfAgent - INFO - Processing PDF text through PDF agent chain.
2025-06-05 05:21:11,568 - agents.PdfAgent - DEBUG - PDF agent chain invoked successfully.
2025-06-05 05:21:11,569 - agents.PdfAgent - DEBUG - LLM output: content='```json\n{\n  "document_type": "invoice",\n  "extracted_data": {\n    "Invoice Number/ID": "INV-3337",\n    "Issue Date": "January 25, 2016",\n    "Due Date": "January 31, 2016",\n    "Customer Name": "Test Business",\n    "Line items": [\n      {\n        "description": "Web Design\\nThis is a sample description...",\n        "quantity": "1.00",\n        "unit price": "$85.00",\n        "tax": "$0.00",\n        "amount": "$85.00"\n      }\n    ],\n    "Currency": "USD",\n    "Total Amount": "$93.50"\n  },\n  "anomalies": [],\n  "suggested_action": "log_and_close"\n}\n``` \n\n\n**Explanation:**\n\n1. **Document Type:** The text clearly states "Invoice", so we classify it as an invoice.\n\n2. **Extracted Data:**  We identify and extract the key fields mentioned in the prompt. \n    - The "Currency" is assumed to be USD based on the format of the total amount.\n\n3. **Anomaly Validation:**\n    - The total amount extracted ($93.50) matches the "Total Due" mentioned in the invoice.\n    - The invoice total does not exceed 10,000, so no critical anomaly is flagged.\n\n4. **Suggested Action:** Since no anomalies are found, the suggested action is "log_and_close".\n\n\n\nLet me know if you have any other PDF documents you\'d like me to analyze!\n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 385, 'prompt_tokens': 1047, 'total_tokens': 1432, 'completion_time': 0.7, 'prompt_time': 0.036487019, 'queue_time': 0.24700984199999998, 'total_time': 0.736487019}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-fce534dd-bd2d-46f0-b3b9-3c57a4c6b420-0' usage_metadata={'input_tokens': 1047, 'output_tokens': 385, 'total_tokens': 1432}
2025-06-05 05:21:11,570 - agents.PdfAgent - DEBUG - LLM output after stripping: ```json
{
  "document_type": "invoice",
  "extracted_data": {
    "Invoice Number/ID": "INV-3337",
 ...
2025-06-05 05:21:11,570 - agents.PdfAgent - DEBUG - Extracting JSON from Pdf agent output.
2025-06-05 05:21:11,571 - agents.PdfAgent - DEBUG - Successfully parsed JSON: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': 'INV-3337', 'Issue Date': 'January 25, 2016', 'Due Date': 'January 31, 2016', 'Customer Name': 'Test Business', 'Line items': [{'description': 'Web Design\nThis is a sample description...', 'quantity': '1.00', 'unit price': '$85.00', 'tax': '$0.00', 'amount': '$85.00'}], 'Currency': 'USD', 'Total Amount': '$93.50'}, 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 05:21:11,572 - agents.PdfAgent - INFO - PDF processing successful, extracted data: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': 'INV-3337', 'Issue Date': 'January 25, 2016', 'Due Date': 'January 31, 2016', 'Customer Name': 'Test Business', 'Line items': [{'description': 'Web Design\nThis is a sample description...', 'quantity': '1.00', 'unit price': '$85.00', 'tax': '$0.00', 'amount': '$85.00'}], 'Currency': 'USD', 'Total Amount': '$93.50'}, 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 05:21:11,574 - __main__ - INFO - ______________________________
2025-06-05 05:21:11,576 - core.ActionRouter - DEBUG - RouteAction received agent_output: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': 'INV-3337', 'Issue Date': 'January 25, 2016', 'Due Date': 'January 31, 2016', 'Customer Name': 'Test Business', 'Line items': [{'description': 'Web Design\nThis is a sample description...', 'quantity': '1.00', 'unit price': '$85.00', 'tax': '$0.00', 'amount': '$85.00'}], 'Currency': 'USD', 'Total Amount': '$93.50'}, 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 05:21:11,576 - core.ActionRouter - INFO - [Action Router] Logging and closing the ticket.
2025-06-05 05:21:11,577 - core.ActionRouter - DEBUG - RouteAction result: {'action': 'log_and_close', 'status': 'success', 'route': 'log_only'}
2025-06-05 05:21:11,578 - __main__ - INFO - ______________________________
2025-06-05 05:21:11,580 - __main__ - INFO - Application finished!
2025-06-05 07:38:34,209 - __main__ - INFO - 





2025-06-05 07:38:34,209 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-05 07:38:34,209 - __main__ - INFO - Application starting up...
2025-06-05 07:38:34,209 - __main__ - INFO - Initializing database...
2025-06-05 07:38:34,225 - __main__ - INFO - Database initialized successfully.
2025-06-05 07:38:34,227 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\json\sample3.json
2025-06-05 07:38:34,243 - processor.fileProcessor - INFO - #### Memory Update
2025-06-05 07:38:34,244 - processor.fileProcessor - INFO - insert_run called with run_id: 83a9c08d-7381-48a5-b42c-d3c6ff595d07, source: 'upload', file_path: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\json\sample3.json, original_ext: json
2025-06-05 07:38:34,245 - processor.fileProcessor - INFO - Detected JSON file.
2025-06-05 07:38:34,247 - processor.fileProcessor - INFO - JSON file processed successfully.
2025-06-05 07:38:34,250 - __main__ - INFO - Extracted text from file: 
2025-06-05 07:38:34,250 - __main__ - INFO - {'event': 'new_order', 'order_id': '12345', 'customer_name': 'John Doe', 'items': [{'product_id': 'A123', 'quantity': 2, 'price': 10.99}, {'product_id': 'B456', 'quantity': 1, 'price': 25.5}], 'total_price': 47.47}
2025-06-05 07:38:34,251 - __main__ - INFO - ______________________________
2025-06-05 07:38:34,252 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 07:38:34,252 - agents.ClassifierAgent - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 07:38:34,253 - agents.ClassifierAgent - DEBUG - Input text: {'event': 'new_order', 'order_id': '12345', 'customer_name': 'John Doe', 'items': [{'product_id': 'A123', 'quantity': 2, 'price': 10.99}, {'product_id': 'B456', 'quantity': 1, 'price': 25.5}], 'total_price': 47.47}
2025-06-05 07:38:34,253 - agents.ClassifierAgent - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 07:38:35,838 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 07:38:35,839 - agents.ClassifierAgent - DEBUG - LLM output: content='{"format": "json", "intent": "rfq"} \n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 17, 'prompt_tokens': 4469, 'total_tokens': 4486, 'completion_time': 0.030909091, 'prompt_time': 0.175991719, 'queue_time': 0.48800431099999997, 'total_time': 0.20690081}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-1a4b30b2-6ed6-4bbe-b231-95756a97967d-0' usage_metadata={'input_tokens': 4469, 'output_tokens': 17, 'total_tokens': 4486}
2025-06-05 07:38:35,840 - agents.ClassifierAgent - DEBUG - LLM output after stripping: {"format": "json", "intent": "rfq"}
2025-06-05 07:38:35,840 - agents.ClassifierAgent - DEBUG - Extracting JSON from Classifier LLM output.
2025-06-05 07:38:35,841 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'json', 'intent': 'rfq'}
2025-06-05 07:38:35,843 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'json', 'intent': 'rfq'}
2025-06-05 07:38:35,862 - __main__ - INFO - ______________________________
2025-06-05 07:38:35,865 - agents.JsonAgent - INFO - Processing JSON payload through JsonAgent chain.
2025-06-05 07:38:36,323 - agents.JsonAgent - DEBUG - JsonAgent chain invoked successfully.
2025-06-05 07:38:36,325 - agents.JsonAgent - DEBUG - LLM output: content='```json\n{\n  "status": "valid",\n  "anomalies": [],\n  "suggested_action": "log_and_close"\n}\n``` \n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 41, 'prompt_tokens': 567, 'total_tokens': 608, 'completion_time': 0.074545455, 'prompt_time': 0.025365085, 'queue_time': 0.246073325, 'total_time': 0.09991054}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-1881834c-1b89-4f54-8413-7d14445a65e0-0' usage_metadata={'input_tokens': 567, 'output_tokens': 41, 'total_tokens': 608}
2025-06-05 07:38:36,327 - agents.JsonAgent - DEBUG - LLM output after stripping: ```json
{
  "status": "valid",
  "anomalies": [],
  "suggested_action": "log_and_close"
}
```...
2025-06-05 07:38:36,328 - agents.JsonAgent - DEBUG - Extracting JSON from JSON agent output.
2025-06-05 07:38:36,329 - agents.JsonAgent - DEBUG - Successfully parsed JSON: {'status': 'valid', 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 07:38:36,330 - agents.JsonAgent - INFO - JSON validation successful: {'status': 'valid', 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 07:38:36,352 - agents.JsonAgent - INFO - #### Memory Update
2025-06-05 07:38:36,354 - agents.JsonAgent - INFO - JSON agent run_id: 83a9c08d-7381-48a5-b42c-d3c6ff595d07, action taken: log_and_close, payload: {}
2025-06-05 07:38:36,358 - __main__ - INFO - ______________________________
2025-06-05 07:38:36,359 - core.ActionRouter - DEBUG - RouteAction received agent_output: {'status': 'valid', 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 07:38:36,360 - core.ActionRouter - INFO - [Action Router] Logging and closing the ticket.
2025-06-05 07:38:36,380 - core.ActionRouter - INFO - ### Memory Update
2025-06-05 07:38:36,381 - core.ActionRouter - INFO - Action status updated in memory for run_id: 83a9c08d-7381-48a5-b42c-d3c6ff595d07
2025-06-05 07:38:36,382 - core.ActionRouter - DEBUG - RouteAction result: {'action': 'log_and_close', 'status': 'success', 'route': 'log_only'}
2025-06-05 07:38:36,383 - __main__ - INFO - ______________________________
2025-06-05 07:38:36,384 - __main__ - INFO - Application finished!
2025-06-05 08:31:08,691 - fastapi - ERROR - Form data requires "python-multipart" to be installed. 
You can install "python-multipart" with: 

pip install python-multipart

2025-06-05 08:33:00,221 - main - INFO - 





2025-06-05 08:33:00,222 - main - INFO - ============================== NEW SECTION ==============================
2025-06-05 08:33:00,223 - main - INFO - Application starting up...
2025-06-05 08:33:00,224 - main - INFO - Initializing database...
2025-06-05 08:33:00,225 - main - INFO - Database initialized successfully.
2025-06-05 08:38:54,880 - python_multipart.multipart - DEBUG - Calling on_part_begin with no data
2025-06-05 08:38:54,880 - python_multipart.multipart - DEBUG - Calling on_header_field with data[42:61]
2025-06-05 08:38:54,881 - python_multipart.multipart - DEBUG - Calling on_header_value with data[63:109]
2025-06-05 08:38:54,882 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-06-05 08:38:54,882 - python_multipart.multipart - DEBUG - Calling on_header_field with data[111:123]
2025-06-05 08:38:54,883 - python_multipart.multipart - DEBUG - Calling on_header_value with data[125:135]
2025-06-05 08:38:54,883 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-06-05 08:38:54,884 - python_multipart.multipart - DEBUG - Calling on_headers_finished with no data
2025-06-05 08:38:54,884 - python_multipart.multipart - DEBUG - Calling on_part_data with data[139:1590]
2025-06-05 08:38:54,885 - python_multipart.multipart - DEBUG - Calling on_part_end with no data
2025-06-05 08:38:54,885 - python_multipart.multipart - DEBUG - Calling on_end with no data
2025-06-05 08:46:49,691 - main - INFO - 





2025-06-05 08:46:49,691 - main - INFO - ============================== NEW SECTION ==============================
2025-06-05 08:46:49,692 - main - INFO - Application starting up...
2025-06-05 08:46:49,693 - main - INFO - Initializing database...
2025-06-05 08:46:49,698 - main - INFO - Database initialized successfully.
2025-06-05 08:47:19,877 - python_multipart.multipart - DEBUG - Calling on_part_begin with no data
2025-06-05 08:47:19,878 - python_multipart.multipart - DEBUG - Calling on_header_field with data[42:61]
2025-06-05 08:47:19,879 - python_multipart.multipart - DEBUG - Calling on_header_value with data[63:109]
2025-06-05 08:47:19,879 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-06-05 08:47:19,879 - python_multipart.multipart - DEBUG - Calling on_header_field with data[111:123]
2025-06-05 08:47:19,880 - python_multipart.multipart - DEBUG - Calling on_header_value with data[125:135]
2025-06-05 08:47:19,880 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-06-05 08:47:19,881 - python_multipart.multipart - DEBUG - Calling on_headers_finished with no data
2025-06-05 08:47:19,881 - python_multipart.multipart - DEBUG - Calling on_part_data with data[139:1590]
2025-06-05 08:47:19,881 - python_multipart.multipart - DEBUG - Calling on_part_end with no data
2025-06-05 08:47:19,882 - python_multipart.multipart - DEBUG - Calling on_end with no data
2025-06-05 08:50:19,824 - main - INFO - 





2025-06-05 08:50:19,825 - main - INFO - ============================== NEW SECTION ==============================
2025-06-05 08:50:19,826 - main - INFO - Application starting up...
2025-06-05 08:50:19,826 - main - INFO - Initializing database...
2025-06-05 08:50:19,828 - main - INFO - Database initialized successfully.
2025-06-05 08:50:45,294 - python_multipart.multipart - DEBUG - Calling on_part_begin with no data
2025-06-05 08:50:45,296 - python_multipart.multipart - DEBUG - Calling on_header_field with data[42:61]
2025-06-05 08:50:45,297 - python_multipart.multipart - DEBUG - Calling on_header_value with data[63:109]
2025-06-05 08:50:45,298 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-06-05 08:50:45,299 - python_multipart.multipart - DEBUG - Calling on_header_field with data[111:123]
2025-06-05 08:50:45,301 - python_multipart.multipart - DEBUG - Calling on_header_value with data[125:135]
2025-06-05 08:50:45,301 - python_multipart.multipart - DEBUG - Calling on_header_end with no data
2025-06-05 08:50:45,302 - python_multipart.multipart - DEBUG - Calling on_headers_finished with no data
2025-06-05 08:50:45,302 - python_multipart.multipart - DEBUG - Calling on_part_data with data[139:1590]
2025-06-05 08:50:45,303 - python_multipart.multipart - DEBUG - Calling on_part_end with no data
2025-06-05 08:50:45,303 - python_multipart.multipart - DEBUG - Calling on_end with no data
2025-06-05 08:50:45,313 - processor.fileProcessor - INFO - Processing file: sampleFiles\sample1.txt
2025-06-05 08:50:45,355 - processor.fileProcessor - INFO - #### Memory Update
2025-06-05 08:50:45,358 - processor.fileProcessor - INFO - insert_run called with run_id: 1179437f-24a7-4691-8409-db48d5f3dded, source: 'upload', file_path: sampleFiles\sample1.txt, original_ext: txt
2025-06-05 08:50:45,360 - processor.fileProcessor - INFO - Detected text file.
2025-06-05 08:50:45,435 - processor.fileProcessor - INFO - Text file processed successfully.
2025-06-05 08:50:45,441 - main - INFO - Extracted text from file: 
2025-06-05 08:50:45,442 - main - INFO - Subject: Immediate Attention Required: Overcharged on Last Invoice

Dear Support Team,

I am writing to express my frustration regarding an issue with my recent invoice (Invoice #12345). I noticed that I was charged an amount higher than what was initially quoted to me during the sales call. The discrepancy is significant, and I request an immediate resolution to this problem.

On March 15th, 2025, I had a call with one of your sales representatives, and we discussed the pricing for the software package I purchased. The quoted price was $1200, but the invoice I received lists the total as $1500. This $300 overcharge is not something I can overlook, and I would like it resolved at the earliest.

Furthermore, I am concerned about the lack of transparency in the invoicing process. The breakdown of charges is unclear, and it doesn�t match the details provided in our agreement. Can you please provide me with a detailed explanation of how these charges were calculated?

I have attached a copy of the invoice and the email correspondence from the sales representative. Please look into this matter urgently and adjust the invoice accordingly. If I do not hear back from you within the next 48 hours, I will have no choice but to escalate this issue.

Thank you for your prompt attention to this matter. I expect to hear back from you soon with an update on the resolution.

Sincerely,
John Doe
8121812181
example@gmail.com

2025-06-05 08:50:45,445 - main - INFO - ______________________________
2025-06-05 08:50:45,447 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 08:50:45,449 - agents.ClassifierAgent - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 08:50:45,451 - agents.ClassifierAgent - DEBUG - Input text: Subject: Immediate Attention Required: Overcharged on Last Invoice

Dear Support Team,

I am writing to express my frustration regarding an issue with my recent invoice (Invoice #12345). I noticed that I was charged an amount higher than what was initially quoted to me during the sales call. The discrepancy is significant, and I request an immediate resolution to this problem.

On March 15th, 2025, I had a call with one of your sales representatives, and we discussed the pricing for the software package I purchased. The quoted price was $1200, but the invoice I received lists the total as $1500. This $300 overcharge is not something I can overlook, and I would like it resolved at the earliest.

Furthermore, I am concerned about the lack of transparency in the invoicing process. The breakdown of charges is unclear, and it doesn�t match the details provided in our agreement. Can you please provide me with a detailed explanation of how these charges were calculated?

I have attached a copy of the invoice and the email correspondence from the sales representative. Please look into this matter urgently and adjust the invoice accordingly. If I do not hear back from you within the next 48 hours, I will have no choice but to escalate this issue.

Thank you for your prompt attention to this matter. I expect to hear back from you soon with an update on the resolution.

Sincerely,
John Doe
8121812181
example@gmail.com

2025-06-05 08:50:45,455 - agents.ClassifierAgent - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 08:50:46,910 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 08:50:46,912 - agents.ClassifierAgent - DEBUG - LLM output: content='```json\n{ "format": "email", "intent": "invoice_dispute" }\n```\n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 25, 'prompt_tokens': 4692, 'total_tokens': 4717, 'completion_time': 0.045454545, 'prompt_time': 0.186766797, 'queue_time': 0.501181383, 'total_time': 0.232221342}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-034572d5-8eda-4cc4-9c7e-ba4efa6506d9-0' usage_metadata={'input_tokens': 4692, 'output_tokens': 25, 'total_tokens': 4717}
2025-06-05 08:50:46,914 - agents.ClassifierAgent - DEBUG - LLM output after stripping: ```json
{ "format": "email", "intent": "invoice_dispute" }
```
2025-06-05 08:50:46,916 - agents.ClassifierAgent - DEBUG - Extracting JSON from Classifier LLM output.
2025-06-05 08:50:46,918 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'email', 'intent': 'invoice_dispute'}
2025-06-05 08:50:46,920 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'email', 'intent': 'invoice_dispute'}
2025-06-05 08:50:46,969 - agents.ClassifierAgent - INFO - ### Memory Update
2025-06-05 08:50:46,975 - agents.ClassifierAgent - INFO - Run ID: 1179437f-24a7-4691-8409-db48d5f3dded, Detected Format: email, Intent: invoice_dispute, Routed To: email
2025-06-05 08:50:46,989 - main - INFO - ______________________________
2025-06-05 08:50:46,991 - agents.EmailAgent - INFO - Processing email text through EmailAgent chain.
2025-06-05 08:50:47,678 - agents.EmailAgent - DEBUG - Email agent chain invoked successfully.
2025-06-05 08:50:47,680 - agents.EmailAgent - DEBUG - LLM output: content='{\n  "sender": "John Doe",\n  "urgency": "High",\n  "ContentSummary": "John Doe is requesting an immediate resolution to an overcharge on invoice #12345. He claims the invoice amount ($1500) is $300 higher than the price quoted during the sales call ($1200). He also requests a detailed explanation of the charges and expresses concern about the invoicing process transparency.",\n  "tone": "Escalation",\n  "suggested_action": "escalate"\n} \n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 121, 'prompt_tokens': 483, 'total_tokens': 604, 'completion_time': 0.22, 'prompt_time': 0.017660248, 'queue_time': 0.247451372, 'total_time': 0.237660248}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-7ed14b7e-efd5-4c33-9622-f4e8631c333f-0' usage_metadata={'input_tokens': 483, 'output_tokens': 121, 'total_tokens': 604}
2025-06-05 08:50:47,683 - agents.EmailAgent - DEBUG - LLM output after stripping: {
  "sender": "John Doe",
  "urgency": "High",
  "ContentSummary": "John Doe is requesting an immediate resolution to an overcharge on invoice #12345. He claims the invoice amount ($1500) is $300 high...
2025-06-05 08:50:47,685 - agents.EmailAgent - DEBUG - Extracting JSON from email LLM output.
2025-06-05 08:50:47,686 - agents.EmailAgent - DEBUG - Successfully parsed JSON: {'sender': 'John Doe', 'urgency': 'High', 'ContentSummary': 'John Doe is requesting an immediate resolution to an overcharge on invoice #12345. He claims the invoice amount ($1500) is $300 higher than the price quoted during the sales call ($1200). He also requests a detailed explanation of the charges and expresses concern about the invoicing process transparency.', 'tone': 'Escalation', 'suggested_action': 'escalate'}
2025-06-05 08:50:47,688 - agents.EmailAgent - INFO - Email processing successful: {'sender': 'John Doe', 'urgency': 'High', 'ContentSummary': 'John Doe is requesting an immediate resolution to an overcharge on invoice #12345. He claims the invoice amount ($1500) is $300 higher than the price quoted during the sales call ($1200). He also requests a detailed explanation of the charges and expresses concern about the invoicing process transparency.', 'tone': 'Escalation', 'suggested_action': 'escalate'}
2025-06-05 08:50:47,718 - agents.EmailAgent - INFO - #### Memory Update
2025-06-05 08:50:47,721 - agents.EmailAgent - INFO - Email agent run_id: 1179437f-24a7-4691-8409-db48d5f3dded, action taken: escalate, payload: {'extra': 'details'}
2025-06-05 08:50:47,726 - main - INFO - ______________________________
2025-06-05 08:50:47,728 - core.ActionRouter - DEBUG - RouteAction received agent_output: {'sender': 'John Doe', 'urgency': 'High', 'ContentSummary': 'John Doe is requesting an immediate resolution to an overcharge on invoice #12345. He claims the invoice amount ($1500) is $300 higher than the price quoted during the sales call ($1200). He also requests a detailed explanation of the charges and expresses concern about the invoicing process transparency.', 'tone': 'Escalation', 'suggested_action': 'escalate'}
2025-06-05 08:50:47,730 - core.ActionRouter - INFO - [Action Router] Escalating to CRM: John Doe
2025-06-05 08:50:47,759 - core.ActionRouter - INFO - ### Memory Update
2025-06-05 08:50:47,762 - core.ActionRouter - INFO - Action status updated in memory for run_id: 1179437f-24a7-4691-8409-db48d5f3dded
2025-06-05 08:50:47,765 - core.ActionRouter - DEBUG - RouteAction result: {'action': 'escalate', 'status': 'success', 'route': '/crm/escalate'}
2025-06-05 08:50:47,768 - main - INFO - ______________________________
2025-06-05 08:50:47,770 - main - INFO - Application finished!
2025-06-05 08:54:00,595 - main - INFO - 





2025-06-05 08:54:00,596 - main - INFO - ============================== NEW SECTION ==============================
2025-06-05 08:54:00,597 - main - INFO - Application starting up...
2025-06-05 08:54:00,597 - main - INFO - Initializing database...
2025-06-05 08:54:00,609 - main - INFO - Database initialized successfully.
2025-06-05 08:54:31,383 - processor.fileProcessor - INFO - Processing file: sampleFiles\sample2.txt
2025-06-05 08:54:31,410 - processor.fileProcessor - INFO - #### Memory Update
2025-06-05 08:54:31,413 - processor.fileProcessor - INFO - insert_run called with run_id: 8d431802-ba7b-4342-a587-10ba99b50a11, source: 'upload', file_path: sampleFiles\sample2.txt, original_ext: txt
2025-06-05 08:54:31,416 - processor.fileProcessor - INFO - Detected text file.
2025-06-05 08:54:31,495 - processor.fileProcessor - INFO - Text file processed successfully.
2025-06-05 08:54:31,502 - main - INFO - Extracted text from file: 
2025-06-05 08:54:31,504 - main - INFO - Invoice Number: INV-10001
Invoice Date: May 28, 2025
Due Date: June 12, 2025

Bill To:
ABC Corp.
123 Business Street
New York, NY 10001

Ship To:
XYZ Enterprises
456 Tech Park
San Francisco, CA 94105

Description of Services Provided:

Software Development Package

Custom CRM Development (2 Developers)

Estimated Delivery Date: June 15, 2025

Hourly Rate: $100/hour

Total Hours: 80 hours

Amount: $8,000.00

Software Integration with Existing Tools

Integrating CRM with existing marketing platform

Total Hours: 50 hours

Amount: $5,000.00

Training & Documentation

On-site training for your team

Total Hours: 20 hours

Amount: $2,000.00

Subtotal: $15,000.00
Sales Tax (8.5%): $1,275.00

Total Amount Due: $16,275.00

Payment Instructions:
Please make the payment via wire transfer to the following account:
Bank Name: XYZ Bank
Account Number: 123456789
Routing Number: 987654321

If you have any questions regarding this invoice, please feel free to contact our billing department at billing@xyzcorp.com or call us at (123) 456-7890.


2025-06-05 08:54:31,507 - main - INFO - ______________________________
2025-06-05 08:54:31,509 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 08:54:31,511 - agents.ClassifierAgent - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 08:54:31,513 - agents.ClassifierAgent - DEBUG - Input text: Invoice Number: INV-10001
Invoice Date: May 28, 2025
Due Date: June 12, 2025

Bill To:
ABC Corp.
123 Business Street
New York, NY 10001

Ship To:
XYZ Enterprises
456 Tech Park
San Francisco, CA 94105

Description of Services Provided:

Software Development Package

Custom CRM Development (2 Developers)

Estimated Delivery Date: June 15, 2025

Hourly Rate: $100/hour

Total Hours: 80 hours

Amount: $8,000.00

Software Integration with Existing Tools

Integrating CRM with existing marketing platform

Total Hours: 50 hours

Amount: $5,000.00

Training & Documentation

On-site training for your team

Total Hours: 20 hours

Amount: $2,000.00

Subtotal: $15,000.00
Sales Tax (8.5%): $1,275.00

Total Amount Due: $16,275.00

Payment Instructions:
Please make the payment via wire transfer to the following account:
Bank Name: XYZ Bank
Account Number: 123456789
Routing Number: 987654321

If you have any questions regarding this invoice, please feel free to contact our billing department at billing@xyzcorp.com or call us at (123) 456-7890.


2025-06-05 08:54:31,517 - agents.ClassifierAgent - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 08:54:32,794 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 08:54:32,796 - agents.ClassifierAgent - DEBUG - LLM output: content='{ "format": "pdf", "intent": "invoice" } \n\n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 19, 'prompt_tokens': 4727, 'total_tokens': 4746, 'completion_time': 0.034545455, 'prompt_time': 0.162077498, 'queue_time': 0.5024452319999999, 'total_time': 0.196622953}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-6ec91cf4-4429-401e-a79f-8acbc82f7840-0' usage_metadata={'input_tokens': 4727, 'output_tokens': 19, 'total_tokens': 4746}
2025-06-05 08:54:32,799 - agents.ClassifierAgent - DEBUG - LLM output after stripping: { "format": "pdf", "intent": "invoice" }
2025-06-05 08:54:32,800 - agents.ClassifierAgent - DEBUG - Extracting JSON from Classifier LLM output.
2025-06-05 08:54:32,802 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'pdf', 'intent': 'invoice'}
2025-06-05 08:54:32,803 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'pdf', 'intent': 'invoice'}
2025-06-05 08:54:32,832 - agents.ClassifierAgent - INFO - ### Memory Update
2025-06-05 08:54:32,835 - agents.ClassifierAgent - INFO - Run ID: 8d431802-ba7b-4342-a587-10ba99b50a11, Detected Format: pdf, Intent: invoice, Routed To: pdf
2025-06-05 08:54:32,840 - main - INFO - ______________________________
2025-06-05 08:54:32,841 - agents.PdfAgent - INFO - Processing PDF text through PDF agent chain.
2025-06-05 08:54:33,915 - agents.PdfAgent - DEBUG - PDF agent chain invoked successfully.
2025-06-05 08:54:33,920 - agents.PdfAgent - DEBUG - LLM output: content='```json\n{\n  "document_type": "invoice",\n  "extracted_data": {\n    "Invoice Number/ID": "INV-10001",\n    "Issue Date": "May 28, 2025",\n    "Due Date": "June 12, 2025",\n    "Customer Name": "ABC Corp.",\n    "Line items": [\n      {\n        "description": "Software Development Package",\n        "quantity": null,\n        "unit price": "$100/hour",\n        "tax": null,\n        "amount": "$8,000.00"\n      },\n      {\n        "description": "Software Integration with Existing Tools",\n        "quantity": null,\n        "unit price": null,\n        "tax": null,\n        "amount": "$5,000.00"\n      },\n      {\n        "description": "Training & Documentation",\n        "quantity": null,\n        "unit price": null,\n        "tax": null,\n        "amount": "$2,000.00"\n      }\n    ],\n    "Currency": null,\n    "Total Amount": "$16,275.00"\n  },\n  "anomalies": [\n    {\n      "field": "total_amount",\n      "description": "Invoice total exceeds threshold of 10,000.",\n      "severity": "critical"\n    }\n  ],\n  "suggested_action": "trigger_alert"\n}\n```\n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 360, 'prompt_tokens': 704, 'total_tokens': 1064, 'completion_time': 0.654545455, 'prompt_time': 0.025581293, 'queue_time': 0.247876296, 'total_time': 0.680126748}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-e1132876-ae19-4e7e-90a8-61a031333902-0' usage_metadata={'input_tokens': 704, 'output_tokens': 360, 'total_tokens': 1064}
2025-06-05 08:54:33,925 - agents.PdfAgent - DEBUG - LLM output after stripping: ```json
{
  "document_type": "invoice",
  "extracted_data": {
    "Invoice Number/ID": "INV-10001",
...
2025-06-05 08:54:33,934 - agents.PdfAgent - DEBUG - Extracting JSON from Pdf agent output.
2025-06-05 08:54:33,948 - agents.PdfAgent - DEBUG - Successfully parsed JSON: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': 'INV-10001', 'Issue Date': 'May 28, 2025', 'Due Date': 'June 12, 2025', 'Customer Name': 'ABC Corp.', 'Line items': [{'description': 'Software Development Package', 'quantity': None, 'unit price': '$100/hour', 'tax': None, 'amount': '$8,000.00'}, {'description': 'Software Integration with Existing Tools', 'quantity': None, 'unit price': None, 'tax': None, 'amount': '$5,000.00'}, {'description': 'Training & Documentation', 'quantity': None, 'unit price': None, 'tax': None, 'amount': '$2,000.00'}], 'Currency': None, 'Total Amount': '$16,275.00'}, 'anomalies': [{'field': 'total_amount', 'description': 'Invoice total exceeds threshold of 10,000.', 'severity': 'critical'}], 'suggested_action': 'trigger_alert'}
2025-06-05 08:54:33,966 - agents.PdfAgent - INFO - PDF processing successful, extracted data: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': 'INV-10001', 'Issue Date': 'May 28, 2025', 'Due Date': 'June 12, 2025', 'Customer Name': 'ABC Corp.', 'Line items': [{'description': 'Software Development Package', 'quantity': None, 'unit price': '$100/hour', 'tax': None, 'amount': '$8,000.00'}, {'description': 'Software Integration with Existing Tools', 'quantity': None, 'unit price': None, 'tax': None, 'amount': '$5,000.00'}, {'description': 'Training & Documentation', 'quantity': None, 'unit price': None, 'tax': None, 'amount': '$2,000.00'}], 'Currency': None, 'Total Amount': '$16,275.00'}, 'anomalies': [{'field': 'total_amount', 'description': 'Invoice total exceeds threshold of 10,000.', 'severity': 'critical'}], 'suggested_action': 'trigger_alert'}
2025-06-05 08:54:34,000 - agents.PdfAgent - INFO - #### Memory Update
2025-06-05 08:54:34,007 - agents.PdfAgent - INFO - PDF agent run_id: 8d431802-ba7b-4342-a587-10ba99b50a11, action taken: trigger_alert, payload: {}
2025-06-05 08:54:34,014 - main - INFO - ______________________________
2025-06-05 08:54:34,016 - core.ActionRouter - DEBUG - RouteAction received agent_output: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': 'INV-10001', 'Issue Date': 'May 28, 2025', 'Due Date': 'June 12, 2025', 'Customer Name': 'ABC Corp.', 'Line items': [{'description': 'Software Development Package', 'quantity': None, 'unit price': '$100/hour', 'tax': None, 'amount': '$8,000.00'}, {'description': 'Software Integration with Existing Tools', 'quantity': None, 'unit price': None, 'tax': None, 'amount': '$5,000.00'}, {'description': 'Training & Documentation', 'quantity': None, 'unit price': None, 'tax': None, 'amount': '$2,000.00'}], 'Currency': None, 'Total Amount': '$16,275.00'}, 'anomalies': [{'field': 'total_amount', 'description': 'Invoice total exceeds threshold of 10,000.', 'severity': 'critical'}], 'suggested_action': 'trigger_alert'}
2025-06-05 08:54:34,021 - core.ActionRouter - INFO - [Action Router] Alerting compliance team.
2025-06-05 08:54:34,055 - core.ActionRouter - INFO - ### Memory Update
2025-06-05 08:54:34,057 - core.ActionRouter - INFO - Action status updated in memory for run_id: 8d431802-ba7b-4342-a587-10ba99b50a11
2025-06-05 08:54:34,060 - core.ActionRouter - DEBUG - RouteAction result: {'action': 'trigger_alert', 'status': 'success', 'route': '/risk_alert'}
2025-06-05 08:54:34,063 - main - INFO - ______________________________
2025-06-05 08:54:34,066 - main - INFO - Application finished!
2025-06-05 09:00:00,245 - processor.fileProcessor - INFO - Processing file: sampleFiles\sample3.txt
2025-06-05 09:00:11,967 - processor.fileProcessor - INFO - Processing file: sampleFiles\sample3.txt
2025-06-05 09:01:01,490 - processor.fileProcessor - INFO - Processing file: sampleFiles\sample1.txt
2025-06-05 09:04:01,662 - main - INFO - 





2025-06-05 09:04:01,663 - main - INFO - ============================== NEW SECTION ==============================
2025-06-05 09:04:01,664 - main - INFO - Application starting up...
2025-06-05 09:04:01,664 - main - INFO - Initializing database...
2025-06-05 09:04:01,666 - main - INFO - Database initialized successfully.
2025-06-05 09:04:06,071 - main - INFO - 





2025-06-05 09:04:06,073 - main - INFO - ============================== NEW SECTION ==============================
2025-06-05 09:04:06,073 - main - INFO - Application starting up...
2025-06-05 09:04:06,074 - main - INFO - Initializing database...
2025-06-05 09:04:06,075 - main - INFO - Database initialized successfully.
2025-06-05 09:04:15,331 - main - INFO - 





2025-06-05 09:04:15,332 - main - INFO - ============================== NEW SECTION ==============================
2025-06-05 09:04:15,332 - main - INFO - Application starting up...
2025-06-05 09:04:15,333 - main - INFO - Initializing database...
2025-06-05 09:04:15,334 - main - INFO - Database initialized successfully.
2025-06-05 09:04:42,628 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\sample3.txt
2025-06-05 09:04:42,648 - processor.fileProcessor - INFO - #### Memory Update
2025-06-05 09:04:42,650 - processor.fileProcessor - INFO - insert_run called with run_id: 722eb38c-c1e4-4729-8ae3-fb1809cfd0cb, source: 'upload', file_path: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\sample3.txt, original_ext: txt
2025-06-05 09:04:42,652 - processor.fileProcessor - INFO - Detected text file.
2025-06-05 09:04:42,678 - processor.fileProcessor - INFO - Text file processed successfully.
2025-06-05 09:04:42,682 - main - INFO - Extracted text from file: 
2025-06-05 09:04:42,683 - main - INFO - Subject: Request for Quotation on Office Furniture

Dear Sales Team,

I hope this email finds you well. I am writing to request a formal quotation for office furniture for our new office location at 789 Innovation Drive, San Francisco, CA 94109. We are looking to furnish a 2000 sq. ft. office space, and our requirements are as follows:

Office Desks:
20 units of adjustable-height desks (preferably ergonomic).
Dimensions: 60" W x 30" D
Material: Wood or metal
Quantity: 20

Office Chairs:
30 units of ergonomic office chairs with lumbar support.
Adjustable height and tilt.
Quantity: 30

Meeting Room Table:
1 large meeting table to accommodate up to 12 people.
Material: Wood or glass top
Quantity: 1

Additionally, please include the cost for delivery and assembly in your quotation. If possible, could you also provide the expected lead time for delivery once the order is confirmed?

We are looking to place the order within the next two weeks, so an expedited quotation would be greatly appreciated. Please provide a detailed breakdown of the costs, including individual item prices, taxes, and delivery charges.

Thank you for your time and assistance. I look forward to your prompt response with the requested quotation.

Best regards,
Jane Smith
7458587469
example2@gmail.com
2025-06-05 09:04:42,685 - main - INFO - ______________________________
2025-06-05 09:04:42,686 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 09:04:42,687 - agents.ClassifierAgent - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 09:04:42,689 - agents.ClassifierAgent - DEBUG - Input text: Subject: Request for Quotation on Office Furniture

Dear Sales Team,

I hope this email finds you well. I am writing to request a formal quotation for office furniture for our new office location at 789 Innovation Drive, San Francisco, CA 94109. We are looking to furnish a 2000 sq. ft. office space, and our requirements are as follows:

Office Desks:
20 units of adjustable-height desks (preferably ergonomic).
Dimensions: 60" W x 30" D
Material: Wood or metal
Quantity: 20

Office Chairs:
30 units of ergonomic office chairs with lumbar support.
Adjustable height and tilt.
Quantity: 30

Meeting Room Table:
1 large meeting table to accommodate up to 12 people.
Material: Wood or glass top
Quantity: 1

Additionally, please include the cost for delivery and assembly in your quotation. If possible, could you also provide the expected lead time for delivery once the order is confirmed?

We are looking to place the order within the next two weeks, so an expedited quotation would be greatly appreciated. Please provide a detailed breakdown of the costs, including individual item prices, taxes, and delivery charges.

Thank you for your time and assistance. I look forward to your prompt response with the requested quotation.

Best regards,
Jane Smith
7458587469
example2@gmail.com
2025-06-05 09:04:42,691 - agents.ClassifierAgent - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 09:04:43,800 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 09:04:43,801 - agents.ClassifierAgent - DEBUG - LLM output: content='{ "format": "email", "intent": "rfq" } \n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 19, 'prompt_tokens': 4680, 'total_tokens': 4699, 'completion_time': 0.034545455, 'prompt_time': 0.166190162, 'queue_time': 0.490183158, 'total_time': 0.200735617}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-4615eb48-ac70-44c5-8fd8-a9382eadac91-0' usage_metadata={'input_tokens': 4680, 'output_tokens': 19, 'total_tokens': 4699}
2025-06-05 09:04:43,802 - agents.ClassifierAgent - DEBUG - LLM output after stripping: { "format": "email", "intent": "rfq" }
2025-06-05 09:04:43,803 - agents.ClassifierAgent - DEBUG - Extracting JSON from Classifier LLM output.
2025-06-05 09:04:43,803 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'email', 'intent': 'rfq'}
2025-06-05 09:04:43,804 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'email', 'intent': 'rfq'}
2025-06-05 09:04:43,816 - agents.ClassifierAgent - INFO - ### Memory Update
2025-06-05 09:04:43,818 - agents.ClassifierAgent - INFO - Run ID: 722eb38c-c1e4-4729-8ae3-fb1809cfd0cb, Detected Format: email, Intent: rfq, Routed To: email
2025-06-05 09:04:43,820 - main - INFO - ______________________________
2025-06-05 09:04:43,820 - agents.EmailAgent - INFO - Processing email text through EmailAgent chain.
2025-06-05 09:04:44,462 - agents.EmailAgent - DEBUG - Email agent chain invoked successfully.
2025-06-05 09:04:44,462 - agents.EmailAgent - DEBUG - LLM output: content='{\n  "sender": "Jane Smith",\n  "urgency": "High",\n  "ContentSummary": "Request for a formal quotation on office furniture for a new office location at 789 Innovation Drive, San Francisco, CA 94109.  The request includes 20 adjustable-height desks, 30 ergonomic office chairs, and 1 large meeting table.  The sender needs the quotation within the next two weeks.",\n  "tone": "Polite",\n  "suggested_action": "log_and_close"\n} \n\n\n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 124, 'prompt_tokens': 471, 'total_tokens': 595, 'completion_time': 0.225454545, 'prompt_time': 0.017469043, 'queue_time': 0.24704581700000003, 'total_time': 0.242923588}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-c154e013-843e-4494-9d33-1d8624e8ec28-0' usage_metadata={'input_tokens': 471, 'output_tokens': 124, 'total_tokens': 595}
2025-06-05 09:04:44,462 - agents.EmailAgent - DEBUG - LLM output after stripping: {
  "sender": "Jane Smith",
  "urgency": "High",
  "ContentSummary": "Request for a formal quotation on office furniture for a new office location at 789 Innovation Drive, San Francisco, CA 94109.  Th...
2025-06-05 09:04:44,462 - agents.EmailAgent - DEBUG - Extracting JSON from email LLM output.
2025-06-05 09:04:44,463 - agents.EmailAgent - DEBUG - Successfully parsed JSON: {'sender': 'Jane Smith', 'urgency': 'High', 'ContentSummary': 'Request for a formal quotation on office furniture for a new office location at 789 Innovation Drive, San Francisco, CA 94109.  The request includes 20 adjustable-height desks, 30 ergonomic office chairs, and 1 large meeting table.  The sender needs the quotation within the next two weeks.', 'tone': 'Polite', 'suggested_action': 'log_and_close'}
2025-06-05 09:04:44,463 - agents.EmailAgent - INFO - Email processing successful: {'sender': 'Jane Smith', 'urgency': 'High', 'ContentSummary': 'Request for a formal quotation on office furniture for a new office location at 789 Innovation Drive, San Francisco, CA 94109.  The request includes 20 adjustable-height desks, 30 ergonomic office chairs, and 1 large meeting table.  The sender needs the quotation within the next two weeks.', 'tone': 'Polite', 'suggested_action': 'log_and_close'}
2025-06-05 09:04:44,475 - agents.EmailAgent - INFO - #### Memory Update
2025-06-05 09:04:44,477 - agents.EmailAgent - INFO - Email agent run_id: 722eb38c-c1e4-4729-8ae3-fb1809cfd0cb, action taken: log_and_close, payload: {'extra': 'details'}
2025-06-05 09:04:44,478 - main - INFO - ______________________________
2025-06-05 09:04:44,479 - core.ActionRouter - DEBUG - RouteAction received agent_output: {'sender': 'Jane Smith', 'urgency': 'High', 'ContentSummary': 'Request for a formal quotation on office furniture for a new office location at 789 Innovation Drive, San Francisco, CA 94109.  The request includes 20 adjustable-height desks, 30 ergonomic office chairs, and 1 large meeting table.  The sender needs the quotation within the next two weeks.', 'tone': 'Polite', 'suggested_action': 'log_and_close'}
2025-06-05 09:04:44,480 - core.ActionRouter - INFO - [Action Router] Logging and closing the ticket.
2025-06-05 09:04:44,497 - core.ActionRouter - INFO - ### Memory Update
2025-06-05 09:04:44,498 - core.ActionRouter - INFO - Action status updated in memory for run_id: 722eb38c-c1e4-4729-8ae3-fb1809cfd0cb
2025-06-05 09:04:44,500 - core.ActionRouter - DEBUG - RouteAction result: {'action': 'log_and_close', 'status': 'success', 'route': 'log_only'}
2025-06-05 09:04:44,503 - main - INFO - ______________________________
2025-06-05 09:04:44,504 - main - INFO - Application finished!
2025-06-05 11:10:47,813 - main - INFO - 





2025-06-05 11:10:47,814 - main - INFO - ============================== NEW SECTION ==============================
2025-06-05 11:10:47,814 - main - INFO - Application starting up...
2025-06-05 11:10:47,814 - main - INFO - Initializing database...
2025-06-05 11:10:47,819 - main - INFO - Database initialized successfully.
2025-06-05 11:10:47,887 - main - ERROR - Error fetching history
Traceback (most recent call last):
  File "E:\langflow_directory\gitRepos\FlowbitAI\app\main.py", line 97, in get_history
    raise HTTPException(status_code=404, detail="Run id not found")
fastapi.exceptions.HTTPException: 404: Run id not found
2025-06-05 11:11:03,165 - main - ERROR - Error fetching history
Traceback (most recent call last):
  File "E:\langflow_directory\gitRepos\FlowbitAI\app\main.py", line 97, in get_history
    raise HTTPException(status_code=404, detail="Run id not found")
fastapi.exceptions.HTTPException: 404: Run id not found
2025-06-05 11:13:39,029 - main - INFO - 





2025-06-05 11:13:39,030 - main - INFO - ============================== NEW SECTION ==============================
2025-06-05 11:13:39,031 - main - INFO - Application starting up...
2025-06-05 11:13:39,033 - main - INFO - Initializing database...
2025-06-05 11:13:39,035 - main - INFO - Database initialized successfully.
2025-06-05 11:13:52,226 - main - ERROR - Error fetching history
Traceback (most recent call last):
  File "E:\langflow_directory\gitRepos\FlowbitAI\app\main.py", line 99, in get_history
    raise HTTPException(status_code=404, detail="Run id not found")
fastapi.exceptions.HTTPException: 404: Run id not found
2025-06-05 11:14:17,667 - main - ERROR - Error fetching history
Traceback (most recent call last):
  File "E:\langflow_directory\gitRepos\FlowbitAI\app\main.py", line 99, in get_history
    raise HTTPException(status_code=404, detail="Run id not found")
fastapi.exceptions.HTTPException: 404: Run id not found
2025-06-05 11:14:20,064 - main - ERROR - Error fetching history
Traceback (most recent call last):
  File "E:\langflow_directory\gitRepos\FlowbitAI\app\main.py", line 99, in get_history
    raise HTTPException(status_code=404, detail="Run id not found")
fastapi.exceptions.HTTPException: 404: Run id not found
2025-06-05 11:15:09,517 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\sample1.json
2025-06-05 11:15:09,548 - processor.fileProcessor - INFO - #### Memory Update
2025-06-05 11:15:09,551 - processor.fileProcessor - INFO - insert_run called with run_id: 38e67250-0fbf-4590-823e-a210f76d4efa, source: 'upload', file_path: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\sample1.json, original_ext: json
2025-06-05 11:15:09,557 - processor.fileProcessor - INFO - Detected JSON file.
2025-06-05 11:15:09,570 - processor.fileProcessor - INFO - JSON file processed successfully.
2025-06-05 11:15:09,578 - main - INFO - Extracted text from file: 
2025-06-05 11:15:09,579 - main - INFO - {'header': {'tax_scheme': 'GST', 'version': '1.0', 'invoice_reference_no': 'IRN1234567890'}, 'transaction': {'category': 'B2B', 'type': 'invoice'}, 'document': {'document_type': 'invoice', 'number': 'INV-20240604-001', 'date': '2024-06-04'}, 'seller': {'gstin': '29A1112345678', 'trade_name': 'Seller Company', 'address': '123 Main St, Aravalli'}, 'buyer': {'gstin': '29B1234567890', 'trade_name': 'Buyer Company', 'address': '456 Elm St, Aravalli'}, 'items': [{'description': 'Product A', 'quantity': 10, 'price': 10.0, 'tax_rate': 18.0}], 'payment': {'due_date': '2024-06-18', 'total_amount': 118.0}}
2025-06-05 11:15:09,581 - main - INFO - ______________________________
2025-06-05 11:15:09,583 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 11:15:09,586 - agents.ClassifierAgent - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 11:15:09,590 - agents.ClassifierAgent - DEBUG - Input text: {'header': {'tax_scheme': 'GST', 'version': '1.0', 'invoice_reference_no': 'IRN1234567890'}, 'transaction': {'category': 'B2B', 'type': 'invoice'}, 'document': {'document_type': 'invoice', 'number': 'INV-20240604-001', 'date': '2024-06-04'}, 'seller': {'gstin': '29A1112345678', 'trade_name': 'Seller Company', 'address': '123 Main St, Aravalli'}, 'buyer': {'gstin': '29B1234567890', 'trade_name': 'Buyer Company', 'address': '456 Elm St, Aravalli'}, 'items': [{'description': 'Product A', 'quantity': 10, 'price': 10.0, 'tax_rate': 18.0}], 'payment': {'due_date': '2024-06-18', 'total_amount': 118.0}}
2025-06-05 11:15:09,591 - agents.ClassifierAgent - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 11:15:12,260 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 11:15:12,263 - agents.ClassifierAgent - DEBUG - LLM output: content='{ "format": "json", "intent": "invoice" } \n\n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 19, 'prompt_tokens': 4633, 'total_tokens': 4652, 'completion_time': 0.034545455, 'prompt_time': 0.240857147, 'queue_time': 0.49465853200000004, 'total_time': 0.275402602}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-8a207c81-7dca-4f4b-b158-5781d6da63f2-0' usage_metadata={'input_tokens': 4633, 'output_tokens': 19, 'total_tokens': 4652}
2025-06-05 11:15:12,265 - agents.ClassifierAgent - DEBUG - LLM output after stripping: { "format": "json", "intent": "invoice" }
2025-06-05 11:15:12,267 - agents.ClassifierAgent - DEBUG - Extracting JSON from Classifier LLM output.
2025-06-05 11:15:12,269 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'json', 'intent': 'invoice'}
2025-06-05 11:15:12,272 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'json', 'intent': 'invoice'}
2025-06-05 11:15:12,302 - agents.ClassifierAgent - INFO - ### Memory Update
2025-06-05 11:15:12,305 - agents.ClassifierAgent - INFO - Run ID: 38e67250-0fbf-4590-823e-a210f76d4efa, Detected Format: json, Intent: invoice, Routed To: json
2025-06-05 11:15:12,309 - main - INFO - ______________________________
2025-06-05 11:15:12,311 - agents.JsonAgent - INFO - Processing JSON payload through JsonAgent chain.
2025-06-05 11:15:13,114 - agents.JsonAgent - DEBUG - JsonAgent chain invoked successfully.
2025-06-05 11:15:13,116 - agents.JsonAgent - DEBUG - LLM output: content='```json\n{\n  "status": "valid",\n  "anomalies": [],\n  "suggested_action": "log_and_close"\n}\n``` \n\n\n**Explanation:**\n\nThe provided JSON payload adheres to the expected schema and business rules:\n\n* **Schema Validation:**\n    * All required fields are present.\n    * Data types are consistent (string, number, date).\n    * No unexpected fields are detected.\n\n* **Business Rule Validation:**\n    *  `due_date` is not before `issue_date`.\n    *  The sum of line items matches the `total_amount`.\n    *  Currency is consistent (assuming the `price` field represents currency). \n    *  No duplicate IDs are found.\n\n\n\n\nLet me know if you have another JSON payload to validate!\n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 178, 'prompt_tokens': 731, 'total_tokens': 909, 'completion_time': 0.323636364, 'prompt_time': 0.062879319, 'queue_time': 0.24843596100000004, 'total_time': 0.386515683}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-21aba588-7afc-4ca6-8174-3c6f0482f8f4-0' usage_metadata={'input_tokens': 731, 'output_tokens': 178, 'total_tokens': 909}
2025-06-05 11:15:13,118 - agents.JsonAgent - DEBUG - LLM output after stripping: ```json
{
  "status": "valid",
  "anomalies": [],
  "suggested_action": "log_and_close"
}
``` 


**Explanation:**

The provided JSON payload adheres to the expected schema and business rules:

* **Sch...
2025-06-05 11:15:13,120 - agents.JsonAgent - DEBUG - Extracting JSON from JSON agent output.
2025-06-05 11:15:13,121 - agents.JsonAgent - DEBUG - Successfully parsed JSON: {'status': 'valid', 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 11:15:13,123 - agents.JsonAgent - INFO - JSON validation successful: {'status': 'valid', 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 11:15:13,155 - agents.JsonAgent - INFO - #### Memory Update
2025-06-05 11:15:13,158 - agents.JsonAgent - INFO - JSON agent run_id: 38e67250-0fbf-4590-823e-a210f76d4efa, action taken: log_and_close, payload: {}
2025-06-05 11:15:13,163 - main - INFO - ______________________________
2025-06-05 11:15:13,165 - core.ActionRouter - DEBUG - RouteAction received agent_output: {'status': 'valid', 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 11:15:13,168 - core.ActionRouter - INFO - [Action Router] Logging and closing the ticket.
2025-06-05 11:15:13,199 - core.ActionRouter - INFO - ### Memory Update
2025-06-05 11:15:13,202 - core.ActionRouter - INFO - Action status updated in memory for run_id: 38e67250-0fbf-4590-823e-a210f76d4efa
2025-06-05 11:15:13,205 - core.ActionRouter - DEBUG - RouteAction result: {'action': 'log_and_close', 'status': 'success', 'route': 'log_only'}
2025-06-05 11:15:13,209 - main - INFO - ______________________________
2025-06-05 11:15:13,212 - main - INFO - Application finished!
2025-06-05 11:16:03,987 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\sample3.json
2025-06-05 11:16:51,897 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\app\sampleFiles\sample3.json
2025-06-05 11:48:03,946 - main - INFO - 





2025-06-05 11:48:03,947 - main - INFO - ============================== NEW SECTION ==============================
2025-06-05 11:48:03,947 - main - INFO - Application starting up...
2025-06-05 11:48:03,948 - main - INFO - Initializing database...
2025-06-05 11:48:03,949 - main - INFO - Database initialized successfully.
2025-06-05 11:48:35,190 - __main__ - INFO - 





2025-06-05 11:48:35,190 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-05 11:48:35,190 - __main__ - INFO - Application starting up...
2025-06-05 11:48:35,191 - __main__ - INFO - Initializing database...
2025-06-05 11:48:35,192 - __main__ - INFO - Database initialized successfully.
2025-06-05 11:49:10,705 - __main__ - INFO - 





2025-06-05 11:49:10,706 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-05 11:49:10,706 - __main__ - INFO - Application starting up...
2025-06-05 11:49:10,707 - __main__ - INFO - Initializing database...
2025-06-05 11:49:10,708 - __main__ - INFO - Database initialized successfully.
2025-06-05 11:49:10,708 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\sampleFiles\json\sample1.json
2025-06-05 11:49:10,724 - processor.fileProcessor - INFO - #### Memory Update
2025-06-05 11:49:10,725 - processor.fileProcessor - INFO - insert_run called with run_id: 1085f435-ec0b-4cce-a092-5fb641ba9e80, source: 'upload', file_path: E:\langflow_directory\gitRepos\FlowbitAI\sampleFiles\json\sample1.json, original_ext: json
2025-06-05 11:49:10,725 - processor.fileProcessor - INFO - Detected JSON file.
2025-06-05 11:49:10,725 - processor.fileProcessor - INFO - JSON file processed successfully.
2025-06-05 11:49:10,726 - __main__ - INFO - Extracted text from file: 
2025-06-05 11:49:10,726 - __main__ - INFO - {'header': {'tax_scheme': 'GST', 'version': '1.0', 'invoice_reference_no': 'IRN1234567890'}, 'transaction': {'category': 'B2B', 'type': 'invoice'}, 'document': {'document_type': 'invoice', 'number': 'INV-20240604-001', 'date': '2024-06-04'}, 'seller': {'gstin': '29A1112345678', 'trade_name': 'Seller Company', 'address': '123 Main St, Aravalli'}, 'buyer': {'gstin': '29B1234567890', 'trade_name': 'Buyer Company', 'address': '456 Elm St, Aravalli'}, 'items': [{'description': 'Product A', 'quantity': 10, 'price': 10.0, 'tax_rate': 18.0}], 'payment': {'due_date': '2024-06-18', 'total_amount': 118.0}}
2025-06-05 11:49:10,726 - __main__ - INFO - ______________________________
2025-06-05 11:49:10,726 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 11:49:10,727 - agents.ClassifierAgent - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 11:49:10,727 - agents.ClassifierAgent - DEBUG - Input text: {'header': {'tax_scheme': 'GST', 'version': '1.0', 'invoice_reference_no': 'IRN1234567890'}, 'transaction': {'category': 'B2B', 'type': 'invoice'}, 'document': {'document_type': 'invoice', 'number': 'INV-20240604-001', 'date': '2024-06-04'}, 'seller': {'gstin': '29A1112345678', 'trade_name': 'Seller Company', 'address': '123 Main St, Aravalli'}, 'buyer': {'gstin': '29B1234567890', 'trade_name': 'Buyer Company', 'address': '456 Elm St, Aravalli'}, 'items': [{'description': 'Product A', 'quantity': 10, 'price': 10.0, 'tax_rate': 18.0}], 'payment': {'due_date': '2024-06-18', 'total_amount': 118.0}}
2025-06-05 11:49:10,727 - agents.ClassifierAgent - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 11:49:12,570 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 11:49:12,571 - agents.ClassifierAgent - DEBUG - LLM output: content='```json\n{ "format": "json", "intent": "invoice" }\n```' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 21, 'prompt_tokens': 4633, 'total_tokens': 4654, 'completion_time': 0.038181818, 'prompt_time': 0.200208009, 'queue_time': 0.499158113, 'total_time': 0.238389827}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-47bfff57-9213-491e-9020-0017741107a3-0' usage_metadata={'input_tokens': 4633, 'output_tokens': 21, 'total_tokens': 4654}
2025-06-05 11:49:12,572 - agents.ClassifierAgent - DEBUG - LLM output after stripping: ```json
{ "format": "json", "intent": "invoice" }
```
2025-06-05 11:49:12,573 - agents.ClassifierAgent - DEBUG - Extracting JSON from Classifier LLM output.
2025-06-05 11:49:12,573 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'json', 'intent': 'invoice'}
2025-06-05 11:49:12,574 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'json', 'intent': 'invoice'}
2025-06-05 11:49:12,584 - agents.ClassifierAgent - INFO - ### Memory Update
2025-06-05 11:49:12,585 - agents.ClassifierAgent - INFO - Run ID: 1085f435-ec0b-4cce-a092-5fb641ba9e80, Detected Format: json, Intent: invoice, Routed To: json
2025-06-05 11:49:12,588 - __main__ - INFO - ______________________________
2025-06-05 11:49:12,589 - agents.JsonAgent - INFO - Processing JSON payload through JsonAgent chain.
2025-06-05 11:49:13,275 - agents.JsonAgent - DEBUG - JsonAgent chain invoked successfully.
2025-06-05 11:49:13,276 - agents.JsonAgent - DEBUG - LLM output: content='```json\n{\n  "status": "valid",\n  "anomalies": [\n    {\n      "field": "payment.due_date",\n      "description": "Due date is in the future.",\n      "severity": "minor"\n    }\n  ],\n  "suggested_action": "log_and_close"\n}\n``` \n\n\n**Explanation:**\n\n* **Status:**  "valid" because there are no critical anomalies.\n* **Anomalies:**\n    *  We flagged the `due_date` as a minor anomaly. While not technically invalid, a future due date is unusual and might warrant further investigation. \n* **Suggested Action:** "log_and_close" since the issue is minor and doesn\'t require immediate escalation. \n\n\n\nLet me know if you have another JSON payload to validate!\n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 184, 'prompt_tokens': 731, 'total_tokens': 915, 'completion_time': 0.334545455, 'prompt_time': 0.02621569, 'queue_time': 0.24593559999999998, 'total_time': 0.360761145}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-f9aedbb6-87ac-4711-afab-59f6bbde36b2-0' usage_metadata={'input_tokens': 731, 'output_tokens': 184, 'total_tokens': 915}
2025-06-05 11:49:13,278 - agents.JsonAgent - DEBUG - LLM output after stripping: ```json
{
  "status": "valid",
  "anomalies": [
    {
      "field": "payment.due_date",
      "description": "Due date is in the future.",
      "severity": "minor"
    }
  ],
  "suggested_action": "...
2025-06-05 11:49:13,279 - agents.JsonAgent - DEBUG - Extracting JSON from JSON agent output.
2025-06-05 11:49:13,279 - agents.JsonAgent - DEBUG - Successfully parsed JSON: {'status': 'valid', 'anomalies': [{'field': 'payment.due_date', 'description': 'Due date is in the future.', 'severity': 'minor'}], 'suggested_action': 'log_and_close'}
2025-06-05 11:49:13,279 - agents.JsonAgent - INFO - JSON validation successful: {'status': 'valid', 'anomalies': [{'field': 'payment.due_date', 'description': 'Due date is in the future.', 'severity': 'minor'}], 'suggested_action': 'log_and_close'}
2025-06-05 11:49:13,290 - agents.JsonAgent - INFO - #### Memory Update
2025-06-05 11:49:13,291 - agents.JsonAgent - INFO - JSON agent run_id: 1085f435-ec0b-4cce-a092-5fb641ba9e80, action taken: log_and_close, payload: {}
2025-06-05 11:49:13,291 - __main__ - INFO - ______________________________
2025-06-05 11:49:13,292 - core.ActionRouter - DEBUG - RouteAction received agent_output: {'status': 'valid', 'anomalies': [{'field': 'payment.due_date', 'description': 'Due date is in the future.', 'severity': 'minor'}], 'suggested_action': 'log_and_close'}
2025-06-05 11:49:13,293 - core.ActionRouter - INFO - [Action Router] Logging and closing the ticket.
2025-06-05 11:49:13,305 - core.ActionRouter - INFO - ### Memory Update
2025-06-05 11:49:13,305 - core.ActionRouter - INFO - Action status updated in memory for run_id: 1085f435-ec0b-4cce-a092-5fb641ba9e80
2025-06-05 11:49:13,306 - core.ActionRouter - DEBUG - RouteAction result: {'action': 'log_and_close', 'status': 'success', 'route': 'log_only'}
2025-06-05 11:49:13,308 - __main__ - INFO - ______________________________
2025-06-05 11:49:13,309 - __main__ - INFO - Application finished!
2025-06-05 11:49:42,984 - __main__ - INFO - 





2025-06-05 11:49:42,984 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-05 11:49:42,984 - __main__ - INFO - Application starting up...
2025-06-05 11:49:42,985 - __main__ - INFO - Initializing database...
2025-06-05 11:49:42,993 - __main__ - INFO - Database initialized successfully.
2025-06-05 11:49:42,993 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\sampleFiles\pdfs\invoice.pdf
2025-06-05 11:49:43,001 - processor.fileProcessor - INFO - #### Memory Update
2025-06-05 11:49:43,002 - processor.fileProcessor - INFO - insert_run called with run_id: bf040eff-c7cb-4206-8550-ae122f8e17b0, source: 'upload', file_path: E:\langflow_directory\gitRepos\FlowbitAI\sampleFiles\pdfs\invoice.pdf, original_ext: pdf
2025-06-05 11:49:43,002 - processor.fileProcessor - INFO - Detected PDF file.
2025-06-05 11:49:43,002 - processor.fileProcessor - INFO - Starting extraction from PDF: E:\langflow_directory\gitRepos\FlowbitAI\sampleFiles\pdfs\invoice.pdf
2025-06-05 11:49:43,049 - processor.fileProcessor - DEBUG - PDF opened successfully with 1 pages.
2025-06-05 11:49:43,050 - processor.fileProcessor - DEBUG - Processing page 1.
2025-06-05 11:49:43,075 - processor.fileProcessor - DEBUG - Found 0 table(s) on page 1.
2025-06-05 11:49:43,076 - processor.fileProcessor - INFO - Completed extraction from PDF in Json format.
2025-06-05 11:49:43,076 - processor.fileProcessor - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 11:49:43,078 - processor.fileProcessor - DEBUG - Extracted data: [
  {
    "page_number": 1,
    "text": "Invoice\nInvoice Number 123\nIssue Date March 25, 2024\nDue Date March 25, 2024\nStatus PAID\nExample, LLC Bill To\n123 Fake Street Customer\nNew York City, NY 10012 Address\n(555) 867-5309 City, State Zipcode\nsupport@example.com customer@example.org\nItem Unit Cost Quantity Amount\nSubscription $19.00 1 $19.00\nSubtotal $19.00\nTax Rate 0%\nAmount Due $19.00\nFor questions, contact us anytime at support@example.com.",
    "tables": [],
    "ocr_text": ""
  }
]
2025-06-05 11:49:43,078 - processor.fileProcessor - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 11:49:43,080 - processor.fileProcessor - INFO - PDF file processed successfully.
2025-06-05 11:49:43,081 - __main__ - INFO - Extracted text from file: 
2025-06-05 11:49:43,081 - __main__ - INFO - [{'page_number': 1, 'text': 'Invoice\nInvoice Number 123\nIssue Date March 25, 2024\nDue Date March 25, 2024\nStatus PAID\nExample, LLC Bill To\n123 Fake Street Customer\nNew York City, NY 10012 Address\n(555) 867-5309 City, State Zipcode\nsupport@example.com customer@example.org\nItem Unit Cost Quantity Amount\nSubscription $19.00 1 $19.00\nSubtotal $19.00\nTax Rate 0%\nAmount Due $19.00\nFor questions, contact us anytime at support@example.com.', 'tables': [], 'ocr_text': ''}]
2025-06-05 11:49:43,082 - __main__ - INFO - ______________________________
2025-06-05 11:49:43,082 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 11:49:43,084 - agents.ClassifierAgent - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 11:49:43,085 - agents.ClassifierAgent - DEBUG - Input text: [{'page_number': 1, 'text': 'Invoice\nInvoice Number 123\nIssue Date March 25, 2024\nDue Date March 25, 2024\nStatus PAID\nExample, LLC Bill To\n123 Fake Street Customer\nNew York City, NY 10012 Address\n(555) 867-5309 City, State Zipcode\nsupport@example.com customer@example.org\nItem Unit Cost Quantity Amount\nSubscription $19.00 1 $19.00\nSubtotal $19.00\nTax Rate 0%\nAmount Due $19.00\nFor questions, contact us anytime at support@example.com.', 'tables': [], 'ocr_text': ''}]
2025-06-05 11:49:43,086 - agents.ClassifierAgent - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 11:49:44,599 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 11:49:44,600 - agents.ClassifierAgent - DEBUG - LLM output: content='{ "format": "pdf", "intent": "invoice" } \n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 18, 'prompt_tokens': 4562, 'total_tokens': 4580, 'completion_time': 0.032727273, 'prompt_time': 0.156208043, 'queue_time': 0.49573473700000004, 'total_time': 0.188935316}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-0e6cc480-2a19-4218-abe8-809e6d1b3aff-0' usage_metadata={'input_tokens': 4562, 'output_tokens': 18, 'total_tokens': 4580}
2025-06-05 11:49:44,600 - agents.ClassifierAgent - DEBUG - LLM output after stripping: { "format": "pdf", "intent": "invoice" }
2025-06-05 11:49:44,600 - agents.ClassifierAgent - DEBUG - Extracting JSON from Classifier LLM output.
2025-06-05 11:49:44,601 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'pdf', 'intent': 'invoice'}
2025-06-05 11:49:44,601 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'pdf', 'intent': 'invoice'}
2025-06-05 11:49:44,618 - agents.ClassifierAgent - INFO - ### Memory Update
2025-06-05 11:49:44,620 - agents.ClassifierAgent - INFO - Run ID: bf040eff-c7cb-4206-8550-ae122f8e17b0, Detected Format: pdf, Intent: invoice, Routed To: pdf
2025-06-05 11:49:44,620 - __main__ - INFO - ______________________________
2025-06-05 11:49:44,621 - agents.PdfAgent - INFO - Processing PDF text through PDF agent chain.
2025-06-05 11:49:45,642 - agents.PdfAgent - DEBUG - PDF agent chain invoked successfully.
2025-06-05 11:49:45,643 - agents.PdfAgent - DEBUG - LLM output: content='```json\n{\n  "document_type": "invoice",\n  "extracted_data": {\n    "Invoice Number/ID": "123",\n    "Issue Date": "March 25, 2024",\n    "Due Date": "March 25, 2024",\n    "Customer Name": "Example, LLC",\n    "Line items": [\n      {\n        "description": "Subscription",\n        "quantity": 1,\n        "unit price": 19.00,\n        "tax": 0,\n        "amount": 19.00\n      }\n    ],\n    "Currency": "USD",\n    "Total Amount": 19.00\n  },\n  "anomalies": [],\n  "suggested_action": "log_and_close"\n}\n```' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 196, 'prompt_tokens': 539, 'total_tokens': 735, 'completion_time': 0.356363636, 'prompt_time': 0.03136522, 'queue_time': 0.4775586110000001, 'total_time': 0.387728856}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-27d751b6-f6f3-422a-8e04-b97e6812d7a0-0' usage_metadata={'input_tokens': 539, 'output_tokens': 196, 'total_tokens': 735}
2025-06-05 11:49:45,644 - agents.PdfAgent - DEBUG - LLM output after stripping: ```json
{
  "document_type": "invoice",
  "extracted_data": {
    "Invoice Number/ID": "123",
    "I...
2025-06-05 11:49:45,645 - agents.PdfAgent - DEBUG - Extracting JSON from Pdf agent output.
2025-06-05 11:49:45,645 - agents.PdfAgent - DEBUG - Successfully parsed JSON: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': '123', 'Issue Date': 'March 25, 2024', 'Due Date': 'March 25, 2024', 'Customer Name': 'Example, LLC', 'Line items': [{'description': 'Subscription', 'quantity': 1, 'unit price': 19.0, 'tax': 0, 'amount': 19.0}], 'Currency': 'USD', 'Total Amount': 19.0}, 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 11:49:45,647 - agents.PdfAgent - INFO - PDF processing successful, extracted data: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': '123', 'Issue Date': 'March 25, 2024', 'Due Date': 'March 25, 2024', 'Customer Name': 'Example, LLC', 'Line items': [{'description': 'Subscription', 'quantity': 1, 'unit price': 19.0, 'tax': 0, 'amount': 19.0}], 'Currency': 'USD', 'Total Amount': 19.0}, 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 11:49:45,669 - agents.PdfAgent - INFO - #### Memory Update
2025-06-05 11:49:45,670 - agents.PdfAgent - INFO - PDF agent run_id: bf040eff-c7cb-4206-8550-ae122f8e17b0, action taken: log_and_close, payload: {}
2025-06-05 11:49:45,672 - __main__ - INFO - ______________________________
2025-06-05 11:49:45,674 - core.ActionRouter - DEBUG - RouteAction received agent_output: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': '123', 'Issue Date': 'March 25, 2024', 'Due Date': 'March 25, 2024', 'Customer Name': 'Example, LLC', 'Line items': [{'description': 'Subscription', 'quantity': 1, 'unit price': 19.0, 'tax': 0, 'amount': 19.0}], 'Currency': 'USD', 'Total Amount': 19.0}, 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 11:49:45,675 - core.ActionRouter - INFO - [Action Router] Logging and closing the ticket.
2025-06-05 11:49:45,685 - core.ActionRouter - INFO - ### Memory Update
2025-06-05 11:49:45,687 - core.ActionRouter - INFO - Action status updated in memory for run_id: bf040eff-c7cb-4206-8550-ae122f8e17b0
2025-06-05 11:49:45,690 - core.ActionRouter - DEBUG - RouteAction result: {'action': 'log_and_close', 'status': 'success', 'route': 'log_only'}
2025-06-05 11:49:45,693 - __main__ - INFO - ______________________________
2025-06-05 11:49:45,694 - __main__ - INFO - Application finished!
2025-06-05 11:50:47,367 - __main__ - INFO - 





2025-06-05 11:50:47,368 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-05 11:50:47,368 - __main__ - INFO - Application starting up...
2025-06-05 11:50:47,369 - __main__ - INFO - Initializing database...
2025-06-05 11:50:47,370 - __main__ - INFO - Database initialized successfully.
2025-06-05 11:50:47,370 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\sampleFiles\pdfs\receipt.pdf
2025-06-05 11:50:47,388 - processor.fileProcessor - INFO - #### Memory Update
2025-06-05 11:50:47,390 - processor.fileProcessor - INFO - insert_run called with run_id: 86fdb874-43e2-49a9-afab-c2ac865b039d, source: 'upload', file_path: E:\langflow_directory\gitRepos\FlowbitAI\sampleFiles\pdfs\receipt.pdf, original_ext: pdf
2025-06-05 11:50:47,391 - processor.fileProcessor - INFO - Detected PDF file.
2025-06-05 11:50:47,391 - processor.fileProcessor - INFO - Starting extraction from PDF: E:\langflow_directory\gitRepos\FlowbitAI\sampleFiles\pdfs\receipt.pdf
2025-06-05 11:50:47,411 - processor.fileProcessor - DEBUG - PDF opened successfully with 1 pages.
2025-06-05 11:50:47,411 - processor.fileProcessor - DEBUG - Processing page 1.
2025-06-05 11:50:47,443 - processor.fileProcessor - DEBUG - Found 0 table(s) on page 1.
2025-06-05 11:50:47,444 - processor.fileProcessor - INFO - Completed extraction from PDF in Json format.
2025-06-05 11:50:47,445 - processor.fileProcessor - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 11:50:47,445 - processor.fileProcessor - DEBUG - Extracted data: [
  {
    "page_number": 1,
    "text": "Receipt\nReceipt Number 123\nDate paid March 25, 2024\nPayment method ACH super long super long super long super long super long\nExample, LLC Bill To\n123 Fake Street Customer\nNew York City, NY 10012 Address\n(555) 867-5309 City, State Zipcode\nsupport@example.com customer@example.org\n123456789\nItem Unit Cost Quantity Amount\nSubscription $19.00 1 $19.00\nSubtotal $19.00\nTax $1.12\nTotal $20.12\nAmount paid $20.12\nRefunded on March 25, 2024 $5.00\nFor questions, contact us anytime at support@example.com.",
    "tables": [],
    "ocr_text": ""
  }
]
2025-06-05 11:50:47,446 - processor.fileProcessor - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 11:50:47,447 - processor.fileProcessor - INFO - PDF file processed successfully.
2025-06-05 11:50:47,450 - __main__ - INFO - Extracted text from file: 
2025-06-05 11:50:47,452 - __main__ - INFO - [{'page_number': 1, 'text': 'Receipt\nReceipt Number 123\nDate paid March 25, 2024\nPayment method ACH super long super long super long super long super long\nExample, LLC Bill To\n123 Fake Street Customer\nNew York City, NY 10012 Address\n(555) 867-5309 City, State Zipcode\nsupport@example.com customer@example.org\n123456789\nItem Unit Cost Quantity Amount\nSubscription $19.00 1 $19.00\nSubtotal $19.00\nTax $1.12\nTotal $20.12\nAmount paid $20.12\nRefunded on March 25, 2024 $5.00\nFor questions, contact us anytime at support@example.com.', 'tables': [], 'ocr_text': ''}]
2025-06-05 11:50:47,452 - __main__ - INFO - ______________________________
2025-06-05 11:50:47,453 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 11:50:47,454 - agents.ClassifierAgent - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 11:50:47,456 - agents.ClassifierAgent - DEBUG - Input text: [{'page_number': 1, 'text': 'Receipt\nReceipt Number 123\nDate paid March 25, 2024\nPayment method ACH super long super long super long super long super long\nExample, LLC Bill To\n123 Fake Street Customer\nNew York City, NY 10012 Address\n(555) 867-5309 City, State Zipcode\nsupport@example.com customer@example.org\n123456789\nItem Unit Cost Quantity Amount\nSubscription $19.00 1 $19.00\nSubtotal $19.00\nTax $1.12\nTotal $20.12\nAmount paid $20.12\nRefunded on March 25, 2024 $5.00\nFor questions, contact us anytime at support@example.com.', 'tables': [], 'ocr_text': ''}]
2025-06-05 11:50:47,457 - agents.ClassifierAgent - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 11:50:49,308 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 11:50:49,310 - agents.ClassifierAgent - DEBUG - LLM output: content=' { "format": "pdf", "intent": "payment_receipt" } \n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 20, 'prompt_tokens': 4601, 'total_tokens': 4621, 'completion_time': 0.036363636, 'prompt_time': 0.181687684, 'queue_time': 0.492816316, 'total_time': 0.21805132}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-d63235af-b7fa-4925-a779-2b919fdb3b30-0' usage_metadata={'input_tokens': 4601, 'output_tokens': 20, 'total_tokens': 4621}
2025-06-05 11:50:49,310 - agents.ClassifierAgent - DEBUG - LLM output after stripping: { "format": "pdf", "intent": "payment_receipt" }
2025-06-05 11:50:49,312 - agents.ClassifierAgent - DEBUG - Extracting JSON from Classifier LLM output.
2025-06-05 11:50:49,312 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'pdf', 'intent': 'payment_receipt'}
2025-06-05 11:50:49,313 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'pdf', 'intent': 'payment_receipt'}
2025-06-05 11:50:49,329 - agents.ClassifierAgent - INFO - ### Memory Update
2025-06-05 11:50:49,334 - agents.ClassifierAgent - INFO - Run ID: 86fdb874-43e2-49a9-afab-c2ac865b039d, Detected Format: pdf, Intent: payment_receipt, Routed To: pdf
2025-06-05 11:50:49,345 - __main__ - INFO - ______________________________
2025-06-05 11:50:49,347 - agents.PdfAgent - INFO - Processing PDF text through PDF agent chain.
2025-06-05 11:50:50,273 - agents.PdfAgent - DEBUG - PDF agent chain invoked successfully.
2025-06-05 11:50:50,275 - agents.PdfAgent - DEBUG - LLM output: content='```json\n{\n  "document_type": "invoice",\n  "extracted_data": {\n    "Invoice Number/ID": "123",\n    "Issue Date": "March 25, 2024",\n    "Due Date": null,\n    "Customer Name": "Example, LLC",\n    "Line items": [\n      {\n        "description": "Subscription",\n        "quantity": 1,\n        "unit price": 19.00,\n        "tax": 1.12,\n        "amount": 19.00\n      }\n    ],\n    "Currency": null,\n    "Total Amount": 20.12\n  },\n  "anomalies": [],\n  "suggested_action": "log_and_close"\n}\n``` \n\n**Explanation:**\n\n\n* **Document Type:** The text clearly mentions "Receipt" and "Payment method", classifying it as an invoice.\n* **Extracted Data:**  The relevant fields are extracted from the provided text.\n* **Anomalies:** No anomalies are detected as the total amount matches the sum of line items and it\'s below the 10,000 threshold. \n\n\n\n\n\n\nLet me know if you have another PDF text snippet you\'d like me to analyze!\n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 291, 'prompt_tokens': 578, 'total_tokens': 869, 'completion_time': 0.529090909, 'prompt_time': 0.0209524, 'queue_time': 0.24322507000000002, 'total_time': 0.550043309}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-b93c34e0-e7f3-4a2f-bdf4-504c9990a7d8-0' usage_metadata={'input_tokens': 578, 'output_tokens': 291, 'total_tokens': 869}
2025-06-05 11:50:50,275 - agents.PdfAgent - DEBUG - LLM output after stripping: ```json
{
  "document_type": "invoice",
  "extracted_data": {
    "Invoice Number/ID": "123",
    "I...
2025-06-05 11:50:50,275 - agents.PdfAgent - DEBUG - Extracting JSON from Pdf agent output.
2025-06-05 11:50:50,275 - agents.PdfAgent - DEBUG - Successfully parsed JSON: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': '123', 'Issue Date': 'March 25, 2024', 'Due Date': None, 'Customer Name': 'Example, LLC', 'Line items': [{'description': 'Subscription', 'quantity': 1, 'unit price': 19.0, 'tax': 1.12, 'amount': 19.0}], 'Currency': None, 'Total Amount': 20.12}, 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 11:50:50,275 - agents.PdfAgent - INFO - PDF processing successful, extracted data: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': '123', 'Issue Date': 'March 25, 2024', 'Due Date': None, 'Customer Name': 'Example, LLC', 'Line items': [{'description': 'Subscription', 'quantity': 1, 'unit price': 19.0, 'tax': 1.12, 'amount': 19.0}], 'Currency': None, 'Total Amount': 20.12}, 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 11:50:50,282 - agents.PdfAgent - INFO - #### Memory Update
2025-06-05 11:50:50,283 - agents.PdfAgent - INFO - PDF agent run_id: 86fdb874-43e2-49a9-afab-c2ac865b039d, action taken: log_and_close, payload: {}
2025-06-05 11:50:50,284 - __main__ - INFO - ______________________________
2025-06-05 11:50:50,284 - core.ActionRouter - DEBUG - RouteAction received agent_output: {'document_type': 'invoice', 'extracted_data': {'Invoice Number/ID': '123', 'Issue Date': 'March 25, 2024', 'Due Date': None, 'Customer Name': 'Example, LLC', 'Line items': [{'description': 'Subscription', 'quantity': 1, 'unit price': 19.0, 'tax': 1.12, 'amount': 19.0}], 'Currency': None, 'Total Amount': 20.12}, 'anomalies': [], 'suggested_action': 'log_and_close'}
2025-06-05 11:50:50,285 - core.ActionRouter - INFO - [Action Router] Logging and closing the ticket.
2025-06-05 11:50:50,291 - core.ActionRouter - INFO - ### Memory Update
2025-06-05 11:50:50,291 - core.ActionRouter - INFO - Action status updated in memory for run_id: 86fdb874-43e2-49a9-afab-c2ac865b039d
2025-06-05 11:50:50,293 - core.ActionRouter - DEBUG - RouteAction result: {'action': 'log_and_close', 'status': 'success', 'route': 'log_only'}
2025-06-05 11:50:50,293 - __main__ - INFO - ______________________________
2025-06-05 11:50:50,293 - __main__ - INFO - Application finished!
2025-06-05 11:51:29,089 - __main__ - INFO - 







2025-06-05 11:53:32,656 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-05 11:53:32,657 - __main__ - INFO - Application starting up...
2025-06-05 11:53:32,657 - __main__ - INFO - Initializing database...
2025-06-05 11:53:32,658 - __main__ - INFO - Database initialized successfully.
2025-06-05 11:53:32,659 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\sampleFiles\txt\sample1.txt
2025-06-05 11:53:32,666 - processor.fileProcessor - INFO - #### Memory Update
2025-06-05 11:53:32,667 - processor.fileProcessor - INFO - insert_run called with run_id: 10e9acb0-f245-484e-8c39-d22010157d4d, source: 'upload', file_path: E:\langflow_directory\gitRepos\FlowbitAI\sampleFiles\txt\sample1.txt, original_ext: txt
2025-06-05 11:53:32,667 - processor.fileProcessor - INFO - Detected text file.
2025-06-05 11:53:32,668 - processor.fileProcessor - INFO - Text file processed successfully.
2025-06-05 11:53:32,669 - __main__ - INFO - Extracted text from file: 
2025-06-05 11:53:32,670 - __main__ - INFO - Subject: Immediate Attention Required: Overcharged on Last Invoice

Dear Support Team,

I am writing to express my frustration regarding an issue with my recent invoice (Invoice #12345). I noticed that I was charged an amount higher than what was initially quoted to me during the sales call. The discrepancy is significant, and I request an immediate resolution to this problem.

On March 15th, 2025, I had a call with one of your sales representatives, and we discussed the pricing for the software package I purchased. The quoted price was $1200, but the invoice I received lists the total as $1500. This $300 overcharge is not something I can overlook, and I would like it resolved at the earliest.

Furthermore, I am concerned about the lack of transparency in the invoicing process. The breakdown of charges is unclear, and it doesn�t match the details provided in our agreement. Can you please provide me with a detailed explanation of how these charges were calculated?

I have attached a copy of the invoice and the email correspondence from the sales representative. Please look into this matter urgently and adjust the invoice accordingly. If I do not hear back from you within the next 48 hours, I will have no choice but to escalate this issue.

Thank you for your prompt attention to this matter. I expect to hear back from you soon with an update on the resolution.

Sincerely,
John Doe
8121812181
example@gmail.com

2025-06-05 11:53:32,670 - __main__ - INFO - ______________________________
2025-06-05 11:53:32,671 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 11:53:32,671 - agents.ClassifierAgent - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 11:53:32,671 - agents.ClassifierAgent - DEBUG - Input text: Subject: Immediate Attention Required: Overcharged on Last Invoice

Dear Support Team,

I am writing to express my frustration regarding an issue with my recent invoice (Invoice #12345). I noticed that I was charged an amount higher than what was initially quoted to me during the sales call. The discrepancy is significant, and I request an immediate resolution to this problem.

On March 15th, 2025, I had a call with one of your sales representatives, and we discussed the pricing for the software package I purchased. The quoted price was $1200, but the invoice I received lists the total as $1500. This $300 overcharge is not something I can overlook, and I would like it resolved at the earliest.

Furthermore, I am concerned about the lack of transparency in the invoicing process. The breakdown of charges is unclear, and it doesn�t match the details provided in our agreement. Can you please provide me with a detailed explanation of how these charges were calculated?

I have attached a copy of the invoice and the email correspondence from the sales representative. Please look into this matter urgently and adjust the invoice accordingly. If I do not hear back from you within the next 48 hours, I will have no choice but to escalate this issue.

Thank you for your prompt attention to this matter. I expect to hear back from you soon with an update on the resolution.

Sincerely,
John Doe
8121812181
example@gmail.com

2025-06-05 11:53:32,671 - agents.ClassifierAgent - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 11:53:34,864 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 11:53:34,866 - agents.ClassifierAgent - DEBUG - LLM output: content='{ "format": "email", "intent": "invoice_dispute" } \n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 21, 'prompt_tokens': 4692, 'total_tokens': 4713, 'completion_time': 0.038181818, 'prompt_time': 0.161125623, 'queue_time': 0.49744270700000004, 'total_time': 0.199307441}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-b99dd314-34f4-4999-8a59-c6a17327e3af-0' usage_metadata={'input_tokens': 4692, 'output_tokens': 21, 'total_tokens': 4713}
2025-06-05 11:53:34,867 - agents.ClassifierAgent - DEBUG - LLM output after stripping: { "format": "email", "intent": "invoice_dispute" }
2025-06-05 11:53:34,869 - agents.ClassifierAgent - DEBUG - Extracting JSON from Classifier LLM output.
2025-06-05 11:53:34,870 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'email', 'intent': 'invoice_dispute'}
2025-06-05 11:53:34,871 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'email', 'intent': 'invoice_dispute'}
2025-06-05 11:53:34,898 - agents.ClassifierAgent - INFO - ### Memory Update
2025-06-05 11:53:34,899 - agents.ClassifierAgent - INFO - Run ID: 10e9acb0-f245-484e-8c39-d22010157d4d, Detected Format: email, Intent: invoice_dispute, Routed To: email
2025-06-05 11:53:34,903 - __main__ - INFO - ______________________________
2025-06-05 11:53:34,904 - agents.EmailAgent - INFO - Processing email text through EmailAgent chain.
2025-06-05 11:53:35,577 - agents.EmailAgent - DEBUG - Email agent chain invoked successfully.
2025-06-05 11:53:35,578 - agents.EmailAgent - DEBUG - LLM output: content='```json\n{\n  "sender": "John Doe",\n  "urgency": "High",\n  "ContentSummary": "John Doe is complaining about being overcharged on Invoice #12345. He states the quoted price was $1200 but the invoice shows $1500. He also requests a detailed explanation of the charges and expresses concern about the lack of transparency in the invoicing process.",\n  "tone": "Escalation",\n  "suggested_action": "escalate"\n}\n```' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 115, 'prompt_tokens': 483, 'total_tokens': 598, 'completion_time': 0.209090909, 'prompt_time': 0.017677206, 'queue_time': 0.252292275, 'total_time': 0.226768115}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-bc442fe2-ef4f-4071-a84f-1a4885f1a36b-0' usage_metadata={'input_tokens': 483, 'output_tokens': 115, 'total_tokens': 598}
2025-06-05 11:53:35,578 - agents.EmailAgent - DEBUG - LLM output after stripping: ```json
{
  "sender": "John Doe",
  "urgency": "High",
  "ContentSummary": "John Doe is complaining about being overcharged on Invoice #12345. He states the quoted price was $1200 but the invoice show...
2025-06-05 11:53:35,579 - agents.EmailAgent - DEBUG - Extracting JSON from email LLM output.
2025-06-05 11:53:35,579 - agents.EmailAgent - DEBUG - Successfully parsed JSON: {'sender': 'John Doe', 'urgency': 'High', 'ContentSummary': 'John Doe is complaining about being overcharged on Invoice #12345. He states the quoted price was $1200 but the invoice shows $1500. He also requests a detailed explanation of the charges and expresses concern about the lack of transparency in the invoicing process.', 'tone': 'Escalation', 'suggested_action': 'escalate'}
2025-06-05 11:53:35,579 - agents.EmailAgent - INFO - Email processing successful: {'sender': 'John Doe', 'urgency': 'High', 'ContentSummary': 'John Doe is complaining about being overcharged on Invoice #12345. He states the quoted price was $1200 but the invoice shows $1500. He also requests a detailed explanation of the charges and expresses concern about the lack of transparency in the invoicing process.', 'tone': 'Escalation', 'suggested_action': 'escalate'}
2025-06-05 11:53:35,608 - agents.EmailAgent - INFO - #### Memory Update
2025-06-05 11:53:35,610 - agents.EmailAgent - INFO - Email agent run_id: 10e9acb0-f245-484e-8c39-d22010157d4d, action taken: escalate, payload: {'extra': 'details'}
2025-06-05 11:53:35,613 - __main__ - INFO - ______________________________
2025-06-05 11:53:35,614 - core.ActionRouter - DEBUG - RouteAction received agent_output: {'sender': 'John Doe', 'urgency': 'High', 'ContentSummary': 'John Doe is complaining about being overcharged on Invoice #12345. He states the quoted price was $1200 but the invoice shows $1500. He also requests a detailed explanation of the charges and expresses concern about the lack of transparency in the invoicing process.', 'tone': 'Escalation', 'suggested_action': 'escalate'}
2025-06-05 11:53:35,615 - core.ActionRouter - INFO - [Action Router] Escalating to CRM: John Doe
2025-06-05 11:53:35,632 - core.ActionRouter - INFO - ### Memory Update
2025-06-05 11:53:35,633 - core.ActionRouter - INFO - Action status updated in memory for run_id: 10e9acb0-f245-484e-8c39-d22010157d4d
2025-06-05 11:53:35,635 - core.ActionRouter - DEBUG - RouteAction result: {'action': 'escalate', 'status': 'success', 'route': '/crm/escalate'}
2025-06-05 11:53:35,638 - __main__ - INFO - ______________________________
2025-06-05 11:53:35,638 - __main__ - INFO - Application finished!
2025-06-05 11:54:07,343 - __main__ - INFO - 







2025-06-05 11:55:12,528 - __main__ - INFO - ============================== NEW SECTION ==============================
2025-06-05 11:55:12,528 - __main__ - INFO - Application starting up...
2025-06-05 11:55:12,529 - __main__ - INFO - Initializing database...
2025-06-05 11:55:12,530 - __main__ - INFO - Database initialized successfully.
2025-06-05 11:55:12,533 - processor.fileProcessor - INFO - Processing file: E:\langflow_directory\gitRepos\FlowbitAI\sampleFiles\txt\sample3.txt
2025-06-05 11:55:12,546 - processor.fileProcessor - INFO - #### Memory Update
2025-06-05 11:55:12,546 - processor.fileProcessor - INFO - insert_run called with run_id: d577d7f4-d8c5-4a3f-9bc4-739b90396c73, source: 'upload', file_path: E:\langflow_directory\gitRepos\FlowbitAI\sampleFiles\txt\sample3.txt, original_ext: txt
2025-06-05 11:55:12,546 - processor.fileProcessor - INFO - Detected text file.
2025-06-05 11:55:12,548 - processor.fileProcessor - INFO - Text file processed successfully.
2025-06-05 11:55:12,549 - __main__ - INFO - Extracted text from file: 
2025-06-05 11:55:12,549 - __main__ - INFO - Subject: Request for Quotation on Office Furniture

Dear Sales Team,

I hope this email finds you well. I am writing to request a formal quotation for office furniture for our new office location at 789 Innovation Drive, San Francisco, CA 94109. We are looking to furnish a 2000 sq. ft. office space, and our requirements are as follows:

Office Desks:
20 units of adjustable-height desks (preferably ergonomic).
Dimensions: 60" W x 30" D
Material: Wood or metal
Quantity: 20

Office Chairs:
30 units of ergonomic office chairs with lumbar support.
Adjustable height and tilt.
Quantity: 30

Meeting Room Table:
1 large meeting table to accommodate up to 12 people.
Material: Wood or glass top
Quantity: 1

Additionally, please include the cost for delivery and assembly in your quotation. If possible, could you also provide the expected lead time for delivery once the order is confirmed?

We are looking to place the order within the next two weeks, so an expedited quotation would be greatly appreciated. Please provide a detailed breakdown of the costs, including individual item prices, taxes, and delivery charges.

Thank you for your time and assistance. I look forward to your prompt response with the requested quotation.

Best regards,
Jane Smith
7458587469
example2@gmail.com
2025-06-05 11:55:12,549 - __main__ - INFO - ______________________________
2025-06-05 11:55:12,550 - agents.ClassifierAgent - INFO - Classifying input text.
2025-06-05 11:55:12,550 - agents.ClassifierAgent - INFO - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2025-06-05 11:55:12,550 - agents.ClassifierAgent - DEBUG - Input text: Subject: Request for Quotation on Office Furniture

Dear Sales Team,

I hope this email finds you well. I am writing to request a formal quotation for office furniture for our new office location at 789 Innovation Drive, San Francisco, CA 94109. We are looking to furnish a 2000 sq. ft. office space, and our requirements are as follows:

Office Desks:
20 units of adjustable-height desks (preferably ergonomic).
Dimensions: 60" W x 30" D
Material: Wood or metal
Quantity: 20

Office Chairs:
30 units of ergonomic office chairs with lumbar support.
Adjustable height and tilt.
Quantity: 30

Meeting Room Table:
1 large meeting table to accommodate up to 12 people.
Material: Wood or glass top
Quantity: 1

Additionally, please include the cost for delivery and assembly in your quotation. If possible, could you also provide the expected lead time for delivery once the order is confirmed?

We are looking to place the order within the next two weeks, so an expedited quotation would be greatly appreciated. Please provide a detailed breakdown of the costs, including individual item prices, taxes, and delivery charges.

Thank you for your time and assistance. I look forward to your prompt response with the requested quotation.

Best regards,
Jane Smith
7458587469
example2@gmail.com
2025-06-05 11:55:12,551 - agents.ClassifierAgent - INFO - <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
2025-06-05 11:55:14,788 - agents.ClassifierAgent - DEBUG - LLM chain invoked successfully.
2025-06-05 11:55:14,790 - agents.ClassifierAgent - DEBUG - LLM output: content='{"format": "email", "intent": "rfq"} \n\n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 18, 'prompt_tokens': 4680, 'total_tokens': 4698, 'completion_time': 0.032727273, 'prompt_time': 0.260785393, 'queue_time': 0.49426231700000006, 'total_time': 0.293512666}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-f3e09737-2d8b-48f8-a18e-0fa63fec0b60-0' usage_metadata={'input_tokens': 4680, 'output_tokens': 18, 'total_tokens': 4698}
2025-06-05 11:55:14,791 - agents.ClassifierAgent - DEBUG - LLM output after stripping: {"format": "email", "intent": "rfq"}
2025-06-05 11:55:14,792 - agents.ClassifierAgent - DEBUG - Extracting JSON from Classifier LLM output.
2025-06-05 11:55:14,793 - agents.ClassifierAgent - DEBUG - Successfully parsed JSON: {'format': 'email', 'intent': 'rfq'}
2025-06-05 11:55:14,794 - agents.ClassifierAgent - INFO - Classification successful: {'format': 'email', 'intent': 'rfq'}
2025-06-05 11:55:14,815 - agents.ClassifierAgent - INFO - ### Memory Update
2025-06-05 11:55:14,815 - agents.ClassifierAgent - INFO - Run ID: d577d7f4-d8c5-4a3f-9bc4-739b90396c73, Detected Format: email, Intent: rfq, Routed To: email
2025-06-05 11:55:14,818 - __main__ - INFO - ______________________________
2025-06-05 11:55:14,818 - agents.EmailAgent - INFO - Processing email text through EmailAgent chain.
2025-06-05 11:55:15,590 - agents.EmailAgent - DEBUG - Email agent chain invoked successfully.
2025-06-05 11:55:15,591 - agents.EmailAgent - DEBUG - LLM output: content='```json\n{\n  "sender": "Jane Smith",\n  "urgency": "High",\n  "ContentSummary": "Request for a formal quotation on office furniture for a new office location. Requires 20 adjustable desks, 30 ergonomic chairs, and 1 large meeting table.  Expedited quote needed within the next two weeks.",\n  "tone": "Polite",\n  "suggested_action": "log_and_close"\n}\n```\n' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 103, 'prompt_tokens': 471, 'total_tokens': 574, 'completion_time': 0.187272727, 'prompt_time': 0.021293, 'queue_time': 0.24725693999999998, 'total_time': 0.208565727}, 'model_name': 'Gemma2-9b-It', 'system_fingerprint': 'fp_10c08bf97d', 'finish_reason': 'stop', 'logprobs': None} id='run-0d439c73-913a-4e0d-84cd-d6424a62652e-0' usage_metadata={'input_tokens': 471, 'output_tokens': 103, 'total_tokens': 574}
2025-06-05 11:55:15,591 - agents.EmailAgent - DEBUG - LLM output after stripping: ```json
{
  "sender": "Jane Smith",
  "urgency": "High",
  "ContentSummary": "Request for a formal quotation on office furniture for a new office location. Requires 20 adjustable desks, 30 ergonomic c...
2025-06-05 11:55:15,592 - agents.EmailAgent - DEBUG - Extracting JSON from email LLM output.
2025-06-05 11:55:15,593 - agents.EmailAgent - DEBUG - Successfully parsed JSON: {'sender': 'Jane Smith', 'urgency': 'High', 'ContentSummary': 'Request for a formal quotation on office furniture for a new office location. Requires 20 adjustable desks, 30 ergonomic chairs, and 1 large meeting table.  Expedited quote needed within the next two weeks.', 'tone': 'Polite', 'suggested_action': 'log_and_close'}
2025-06-05 11:55:15,594 - agents.EmailAgent - INFO - Email processing successful: {'sender': 'Jane Smith', 'urgency': 'High', 'ContentSummary': 'Request for a formal quotation on office furniture for a new office location. Requires 20 adjustable desks, 30 ergonomic chairs, and 1 large meeting table.  Expedited quote needed within the next two weeks.', 'tone': 'Polite', 'suggested_action': 'log_and_close'}
2025-06-05 11:55:15,607 - agents.EmailAgent - INFO - #### Memory Update
2025-06-05 11:55:15,608 - agents.EmailAgent - INFO - Email agent run_id: d577d7f4-d8c5-4a3f-9bc4-739b90396c73, action taken: log_and_close, payload: {'extra': 'details'}
2025-06-05 11:55:15,611 - __main__ - INFO - ______________________________
2025-06-05 11:55:15,611 - core.ActionRouter - DEBUG - RouteAction received agent_output: {'sender': 'Jane Smith', 'urgency': 'High', 'ContentSummary': 'Request for a formal quotation on office furniture for a new office location. Requires 20 adjustable desks, 30 ergonomic chairs, and 1 large meeting table.  Expedited quote needed within the next two weeks.', 'tone': 'Polite', 'suggested_action': 'log_and_close'}
2025-06-05 11:55:15,612 - core.ActionRouter - INFO - [Action Router] Logging and closing the ticket.
2025-06-05 11:55:15,625 - core.ActionRouter - INFO - ### Memory Update
2025-06-05 11:55:15,626 - core.ActionRouter - INFO - Action status updated in memory for run_id: d577d7f4-d8c5-4a3f-9bc4-739b90396c73
2025-06-05 11:55:15,627 - core.ActionRouter - DEBUG - RouteAction result: {'action': 'log_and_close', 'status': 'success', 'route': 'log_only'}
2025-06-05 11:55:15,629 - __main__ - INFO - ______________________________
2025-06-05 11:55:15,630 - __main__ - INFO - Application finished!
2025-06-05 11:58:06,645 - main - INFO - 


